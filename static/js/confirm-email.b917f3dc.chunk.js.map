{"version":3,"sources":["layouts/confirm-email.js"],"names":["ConfirmEmail","state","confirmation","componentDidMount","a","apiUrl","process","API_URL","controller","AbortController","signal","fetchPromise","fetch","props","match","params","token","timeoutId","setTimeout","abort","then","res","text","setState","clearTimeout","classes","this","Fragment","charset","name","content","rel","href","className","root","section","variant","align","gutterBottom","Component","compose","withApollo","withStyles","theme","backgroundColor","height","color","masthead","padding","spacing","unit","margin","maxWidth","flexDirection"],"mappings":"0OAmCMA,E,4MACJC,MAAQ,CACNC,aAAc,I,EAGhBC,kB,sBAAoB,kCAAAC,EAAA,sDACZC,EAASC,sHAAYC,QAEnBC,EAAa,IAAIC,gBACRD,EAAWE,OAEpBC,EAAeC,MAAM,GAAD,OACrBP,EADqB,8BACO,EAAKQ,MAAMC,MAAMC,OAAOC,QAInDC,EAAYC,YAAW,kBAAMV,EAAWW,UAAS,KAEvDR,EAAaS,KAAb,uCAAkB,WAAMC,GAAN,SAAAjB,EAAA,6EAGMiB,EAAIC,OAHV,yBAGdpB,aAHc,WAEXqB,SAFW,gBAOhBC,aAAaP,GAPG,2CAAlB,uDAbgB,2C,uDAmCV,IACDQ,EAAWC,KAAKb,MAAhBY,QACAvB,EAAgBwB,KAAKzB,MAArBC,aAEP,OACE,kBAAC,IAAMyB,SAAP,KACE,kBAAC,IAAD,KACE,0BAAMC,QAAQ,UACd,0BACEC,KAAK,WACLC,QAAQ,0DAEV,0BAAMD,KAAK,SAASC,QAAQ,cAC5B,4DACA,0BAAMC,IAAI,YAAYC,KAAK,qCAE7B,kBAAC,IAAD,CAAWC,UAAWR,EAAQS,MAC5B,kBAAC,IAAD,CAASD,UAAWR,EAAQU,SAC1B,kBAAC,IAAD,CACEC,QAAQ,KACRC,MAAM,SACNJ,UAAWR,EAAQH,KACnBgB,cAAY,GACXpC,U,GA/DYqC,aAwEZC,4BACbC,aACAC,sBApGa,SAAAC,GAAK,MAAK,CACvBT,KAAM,CACJU,gBAAiB,QACjBC,OAAQ,QAEVvB,KAAM,CACJwB,MAAO,SAETC,SAAS,aACPC,QAA8B,EAArBL,EAAMM,QAAQC,KACvBC,OAAQ,OACRC,SAAU,KAHJ,2BAIwB,CAC5BC,cAAe,WAGnBlB,QAAQ,aACNa,QAA8B,EAArBL,EAAMM,QAAQC,KACvBL,OAAQ,QACRO,SAAU,KAHL,2BAIyB,CAC5BC,cAAe,eA6ENb,CAGbxC","file":"static/js/confirm-email.b917f3dc.chunk.js","sourcesContent":["import React, {Component} from \"react\"\nimport {Helmet} from \"react-helmet-async\"\nimport {compose, withApollo} from \"react-apollo\"\nimport Typography from \"@material-ui/core/Typography\"\nimport {withStyles} from \"@material-ui/core/styles\"\n\n/* import gql from \"graphql-tag\" */\nimport {Container, Section} from \"../components\"\n\nconst styles = theme => ({\n  root: {\n    backgroundColor: \"black\",\n    height: \"100%\"\n  },\n  text: {\n    color: \"white\"\n  },\n  masthead: {\n    padding: theme.spacing.unit * 1,\n    margin: \"auto\",\n    maxWidth: 900,\n    [`@media (max-width:770px)`]: {\n      flexDirection: \"column\"\n    }\n  },\n  section: {\n    padding: theme.spacing.unit * 1,\n    height: \"100vh\",\n    maxWidth: 900,\n    [`@media (max-width:770px)`]: {\n      flexDirection: \"column\"\n    }\n  }\n})\n\nclass ConfirmEmail extends Component {\n  state = {\n    confirmation: \"\"\n  }\n\n  componentDidMount = async () => {\n    const apiUrl = process.env.API_URL\n    if (process.env.NODE_ENV === \"production\") {\n      const controller = new AbortController()\n      const signal = controller.signal\n\n      const fetchPromise = fetch(\n        `${apiUrl}/api/users/confirm/${this.props.match.params.token}`\n      )\n\n      // 5 second timeout:\n      const timeoutId = setTimeout(() => controller.abort(), 5000)\n\n      fetchPromise.then(async res => {\n        // completed request before timeout fired\n        this.setState({\n          confirmation: await res.text()\n        })\n\n        // If you only wanted to timeout the request, not the response, add:\n        clearTimeout(timeoutId)\n      })\n    } else {\n      fetch(\n        `http://192.168.68.8:3010/api/users/confirm/${\n          this.props.match.params.token\n        }`\n      ).then(async res => {\n        this.setState({\n          confirmation: await res.text()\n        })\n      })\n    }\n  }\n\n  render() {\n    const {classes} = this.props\n    const {confirmation} = this.state\n    /* Your email account has been confirmed. */\n    return (\n      <React.Fragment>\n        <Helmet>\n          <meta charset=\"utf-8\" />\n          <meta\n            name=\"viewport\"\n            content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"\n          />\n          <meta name=\"author\" content=\"Isaac Pak\" />\n          <title>Utterzone | Confirm Email</title>\n          <link rel=\"canonical\" href=\"https://utterzone/confirm-email\" />\n        </Helmet>\n        <Container className={classes.root}>\n          <Section className={classes.section}>\n            <Typography\n              variant=\"h6\"\n              align=\"center\"\n              className={classes.text}\n              gutterBottom>\n              {confirmation}\n            </Typography>\n          </Section>\n        </Container>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default compose(\n  withApollo,\n  withStyles(styles)\n)(ConfirmEmail)\n"],"sourceRoot":""}