{"version":3,"sources":["../node_modules/cuid/index.js","../node_modules/cuid/lib/fingerprint.browser.js","../node_modules/cuid/lib/getRandomValue.browser.js","layouts/courses/yupSchemas.js","layouts/courses/errorMessages.js","layouts/courses/containers/course-create.js","../node_modules/lodash/cloneDeep.js","data/language-data.js","utils/cloudinary-utils.js","../node_modules/cuid/lib/pad.js"],"names":["fingerprint","require","pad","getRandomValue","c","discreteValues","Math","pow","randomBlock","toString","safeCounter","cuid","Date","getTime","slug","date","counter","slice","print","random","isCuid","stringToCheck","startsWith","isSlug","stringLength","length","module","exports","env","window","self","globalCount","Object","keys","clientId","navigator","mimeTypes","userAgent","crypto","msCrypto","lim","abs","getRandomValues","Uint32Array","nameTooLong","courseCreateSchema","yup","min","max","shape","title","required","courseDescription","usingLang","teachingLang","DisplayCount","styled","div","StyledSpan","Span","props","display640","initialState","cdn","charCount","courseId","courseImage","resource","disabled","displayName","errors","levels","level","loading","public_id","secure_url","signature","terms","word","translation","audio","uploadedFile","url","COURSE_CREATE_MUTATION","gql","CourseCreate","onChange","e","setState","target","name","value","addTeachingLang","addUsingLang","onImageDrop","files","rejected","isEmpty","alert","uploadedFilePreview","URL","createObjectURL","setValues","values","handleImageDelete","state","a","now","timestamp","apiSecret","process","CLOUDINARY_API_SECRET","hashString","CryptoJS","SHA1","formdata","FormData","append","CLOUDINARY_API_KEY","xhr","XMLHttpRequest","open","CLOUDINARY_CLOUD_NAME","send","cloneDeep","this","revokeObjectURL","classes","handleSubmit","isSubmitting","setFieldValue","setFieldTouched","touched","Fragment","className","root","onSubmit","charset","content","rel","href","heroUnit","heroContent","container","justify","direction","align","variant","heading","gutterBottom","spacing","item","xs","style","margin","textAlign","alt","label","src","size","maxSize","multiple","accept","onDrop","getRootProps","getInputProps","padding","position","width","height","borderWidth","borderColor","borderStyle","borderRadius","alignItems","display","subHeading","fullWidth","id","type","component","FormikInput","FormikTextArea","error","Using","options","groupedOptions","Teaching","justifyContent","color","Component","compose","graphql","withRouter","withFormik","validationSchema","validateOnChange","validateOnBlur","mapPropsToValues","courseMode","topics","setErrors","handleCloudinaryUpload","cdnUpload","result","merge","courseCreate","variables","course","onComplete","session","data","history","push","pathname","_id","toast","success","bodyClassName","hideProgressBar","withStyles","theme","flexGrow","unit","backgroundColor","maxWidth","heroButtons","marginTop","masthead","flexDirection","baseClone","CLONE_DEEP_FLAG","file","folder","tags","Promise","resolve","CLOUDINARY_UPLOAD_PRESET","onload","JSON","parse","response","onerror","undefined","getPublicId","split","lastIndex","substring","lastIndexOf","console","log","num","s","substr"],"mappings":"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E,MAAO,UAET,CACElE,MAAO,UACPkE,MAAO,WAET,CACElE,MAAO,UACPkE,MAAO,WAET,CACElE,MAAO,WACPkE,MAAO,YAET,CACElE,MAAO,UACPkE,MAAO,WAET,CACElE,MAAO,UACPkE,MAAO,WAET,CACElE,MAAO,WACPkE,MAAO,YAET,CACElE,MAAO,SACPkE,MAAO,UAET,CACElE,MAAO,YACPkE,MAAO,aAET,CACElE,MAAO,YACPkE,MAAO,aAET,CACElE,MAAO,QACPkE,MAAO,SAET,CACElE,MAAO,QACPkE,MAAO,SAET,CACElE,MAAO,SACPkE,MAAO,UAET,CACElE,MAAO,UACPkE,MAAO,WAET,CACElE,MAAO,aACPkE,MAAO,cAET,CACElE,MAAO,gBACPkE,MAAO,iBAET,CACElE,MAAO,UACPkE,MAAO,WAET,CACElE,MAAO,OACPkE,MAAO,QAET,CACElE,MAAO,WACPkE,MAAO,YAET,CACElE,MAAO,WACPkE,MAAO,YAET,CACElE,MAAO,QACPkE,MAAO,SAET,CACElE,MAAO,aACPkE,MAAO,cAET,CACElE,MAAO,iBACPkE,MAAO,kBAET,CACElE,MAAO,iBACPkE,MAAO,kBAET,CACElE,MAAO,MACPkE,MAAO,OAET,CACElE,MAAO,QACPkE,MAAO,SAET,CACElE,MAAO,YACPkE,MAAO,aAET,CACElE,MAAO,QACPkE,MAAO,WAohBT,CACElE,MAAO,SACPkE,MAAO,SACP4B,QAnhByB,CAC3B,CACE9F,MAAO,SACPkE,MAAO,UAET,CACElE,MAAO,wBACPkE,MAAO,yBAET,CACElE,MAAO,eACPkE,MAAO,kBA0gBT,CACElE,MAAO,OACPkE,MAAO,OACP4B,QAzgBuB,CACzB,CACE9F,MAAO,aACPkE,MAAO,cAET,CACElE,MAAO,SACPkE,MAAO,UAET,CACElE,MAAO,OACPkE,MAAO,QAET,CACElE,MAAO,aACPkE,MAAO,cAET,CACElE,MAAO,YACPkE,MAAO,aAET,CACElE,MAAO,cACPkE,MAAO,eAET,CACElE,MAAO,WACPkE,MAAO,YAET,CACElE,MAAO,SACPkE,MAAO,UAET,CACElE,MAAO,OACPkE,MAAO,QAET,CACElE,MAAO,UACPkE,MAAO,WAET,CACElE,MAAO,UACPkE,MAAO,WAET,CACElE,MAAO,WACPkE,MAAO,YAET,CACElE,MAAO,WACPkE,MAAO,YAET,CACElE,MAAO,SACPkE,MAAO,UAET,CACElE,MAAO,QACPkE,MAAO,SAET,CACElE,MAAO,SACPkE,MAAO,UAET,CACElE,MAAO,MACPkE,MAAO,OAET,CACElE,MAAO,KACPkE,MAAO,MAET,CACElE,MAAO,QACPkE,MAAO,SAET,CACElE,MAAO,QACPkE,MAAO,SAET,CACElE,MAAO,cACPkE,MAAO,eAET,CACElE,MAAO,SACPkE,MAAO,UAET,CACElE,MAAO,UACPkE,MAAO,WAET,CACElE,MAAO,UACPkE,MAAO,aA4aT,CACElE,MAAO,UACPkE,MAAO,UACP4B,QA3a0B,CAC5B,CACE9F,MAAO,qBACPkE,MAAO,sBAET,CACElE,MAAO,sBACPkE,MAAO,uBAET,CACElE,MAAO,uBACPkE,MAAO,0BAET,CACElE,MAAO,YACPkE,MAAO,aAET,CACElE,MAAO,qBACPkE,MAAO,sBAET,CACElE,MAAO,iBACPkE,MAAO,kBAET,CACElE,MAAO,aACPkE,MAAO,cAET,CACElE,MAAO,QACPkE,MAAO,WA8YT,CACElE,MAAO,oBACPkE,MAAO,WACP4B,QA7Y2B,CAC7B,CACE9F,MAAO,WACPkE,MAAO,YAET,CACElE,MAAO,QACPkE,MAAO,SAET,CACElE,MAAO,qBACPkE,MAAO,0BAoYT,CACElE,MAAO,SACPkE,MAAO,SACP4B,QAnYyB,CAC3B,CACE9F,MAAO,UACPkE,MAAO,WAET,CACElE,MAAO,WACPkE,MAAO,YAET,CACElE,MAAO,QACPkE,MAAO,SAET,CACElE,MAAO,SACPkE,MAAO,UAET,CACElE,MAAO,OACPkE,MAAO,QAET,CACElE,MAAO,UACPkE,MAAO,WAET,CACElE,MAAO,UACPkE,MAAO,WAET,CACElE,MAAO,YACPkE,MAAO,aAET,CACElE,MAAO,OACPkE,MAAO,QAET,CACElE,MAAO,UACPkE,MAAO,WAET,CACElE,MAAO,WACPkE,MAAO,YAET,CACElE,MAAO,SACPkE,MAAO,UAET,CACElE,MAAO,QACPkE,MAAO,WAkVT,CACElE,MAAO,cACPkE,MAAO,cACP4B,QA1S6B,CAC/B,CACE9F,MAAO,SACPkE,MAAO,UAET,CACElE,MAAO,UACPkE,MAAO,WAET,CACElE,MAAO,UACPkE,MAAO,WAET,CACElE,MAAO,UACPkE,MAAO,WAET,CACElE,MAAO,UACPkE,MAAO,WAET,CACElE,MAAO,UACPkE,MAAO,aAqRT,CACElE,MAAO,kBACPkE,MAAO,SACP4B,QAtVyB,CAC3B,CACE9F,MAAO,SACPkE,MAAO,UAET,CACElE,MAAO,kBACPkE,MAAO,mBAET,CACElE,MAAO,2BACPkE,MAAO,4BAET,CACElE,MAAO,kBACPkE,MAAO,mBAET,CACElE,MAAO,sBACPkE,MAAO,uBAET,CACElE,MAAO,eACPkE,MAAO,gBAET,CACElE,MAAO,mBACPkE,MAAO,oBAET,CACElE,MAAO,wCACPkE,MAAO,2CAET,CACElE,MAAO,gCACPkE,MAAO,mCAqTT,CACElE,MAAO,SACPkE,MAAO,SACP4B,QAzRyB,CAC3B,CACE9F,MAAO,UACPkE,MAAO,WAET,CACElE,MAAO,UACPkE,MAAO,WAET,CACElE,MAAO,WACPkE,MAAO,YAET,CACElE,MAAO,QACPkE,MAAO,SAET,CACElE,MAAO,SACPkE,MAAO,UAET,CACElE,MAAO,UACPkE,MAAO,WAET,CACElE,MAAO,YACPkE,MAAO,aAET,CACElE,MAAO,SACPkE,MAAO,UAET,CACElE,MAAO,YACPkE,MAAO,aAET,CACElE,MAAO,YACPkE,MAAO,aAET,CACElE,MAAO,aACPkE,MAAO,cAET,CACElE,MAAO,cACPkE,MAAO,eAET,CACElE,MAAO,aACPkE,MAAO,cAET,CACElE,MAAO,UACPkE,MAAO,WAET,CACElE,MAAO,eACPkE,MAAO,kBAgOT,CACElE,MAAO,SACPkE,MAAO,SACP4B,QA/NyB,CAC3B,CACE9F,MAAO,SACPkE,MAAO,UAET,CACElE,MAAO,UACPkE,MAAO,WAET,CACElE,MAAO,YACPkE,MAAO,aAET,CACElE,MAAO,OACPkE,MAAO,QAET,CACElE,MAAO,UACPkE,MAAO,WAET,CACElE,MAAO,QACPkE,MAAO,SAET,CACElE,MAAO,SACPkE,MAAO,UAET,CACElE,MAAO,cACPkE,MAAO,eAET,CACElE,MAAO,UACPkE,MAAO,WAET,CACElE,MAAO,WACPkE,MAAO,YAET,CACElE,MAAO,WACPkE,MAAO,YAET,CACElE,MAAO,SACPkE,MAAO,UAET,CACElE,MAAO,SACPkE,MAAO,UAET,CACElE,MAAO,UACPkE,MAAO,WAET,CACElE,MAAO,QACPkE,MAAO,SAET,CACElE,MAAO,OACPkE,MAAO,UAkKT,CACElE,MAAO,WACPkE,MAAO,WACP4B,QAjK2B,CAC7B,CACE9F,MAAO,QACPkE,MAAO,SAET,CACElE,MAAO,gBACPkE,MAAO,mBA4JT,CACElE,MAAO,kBACPkE,MAAO,kBACP4B,QA3JiC,CACnC,CACE9F,MAAO,WACPkE,MAAO,WACPvB,UAAW,kBAEb,CACE3C,MAAO,aACPkE,MAAO,aACPvB,UAAW,kBAEb,CACE3C,MAAO,UACPkE,MAAO,UACPvB,UAAW,kBAEb,CACE3C,MAAO,UACPkE,MAAO,UACPvB,UAAW,kBAEb,CACE3C,MAAO,qBACPkE,MAAO,qBACPvB,UAAW,kBAEb,CACE3C,MAAO,cACPkE,MAAO,cACPvB,UAAW,kBAEb,CACE3C,MAAO,UACPkE,MAAO,UACPvB,UAAW,kBAEb,CACE3C,MAAO,YACPkE,MAAO,YACPvB,UAAW,kBAEb,CACE3C,MAAO,SACPkE,MAAO,SACPvB,UAAW,kBAEb,CACE3C,MAAO,WACPkE,MAAO,WACPvB,UAAW,kBAEb,CACE3C,MAAO,UACPkE,MAAO,UACPvB,UAAW,oBAuGb,CACE3C,MAAO,wBACPkE,MAAO,wBACP4B,QAtG8B,CAChC,CACE9F,MAAO,YACPkE,MAAO,YACPvB,UAAW,kBAEb,CACE3C,MAAO,eACPkE,MAAO,eACPvB,UAAW,kBAEb,CACE3C,MAAO,UACPkE,MAAO,UACPvB,UAAW,kBAEb,CACE3C,MAAO,SACPkE,MAAO,SACPvB,UAAW,sB,iCCvsBf,+EAOaoE,EAAyB,SAAC8B,EAAMrD,EAAMsD,EAAQC,GACzD,OAAO,IAAIC,SAAQ,SAAAC,GACjB,IAAIzH,EAAW,IAAIC,SAEnBD,EAASE,OAAO,OAAQmH,GACxBrH,EAASE,OAAO,SAAUoH,GAC1BtH,EAASE,OAAO,OAAQqH,GACxBvH,EAASE,OAAO,aAAcP,sHAAYY,uBAC1CP,EAASE,OAAO,gBAAiBP,sHAAY+H,0BAI7C,IAAItH,EAAM,IAAIC,eAEdD,EAAIE,KACF,OADF,0CAGIX,sHAAYY,sBAHhB,YAIMyD,EAJN,YAKE,GAGF5D,EAAIuH,OAAS,WACXF,EAAQG,KAAKC,MAAMzH,EAAI0H,YAGzB1H,EAAI2H,QAAU,WACZN,OAAQO,IAGV5H,EAAII,KAAKR,OAIAiI,EAAc,SAAAlK,GACzB,IAAImK,EAAQnK,EAAImK,MAAM,KAClBC,EAAYD,EAAMA,EAAM5N,OAAS,GAIrC,OAHA6N,EAAYA,EAAUC,UAAU,EAAGD,EAAUE,YAAY,MACzDC,QAAQC,WAAWJ,GACnBG,QAAQC,IAAIJ,GACLA,I,kBC/CT5N,EAAOC,QAAU,SAAcgO,EAAK5F,GAClC,IAAI6F,EAAI,YAAcD,EACtB,OAAOC,EAAEC,OAAOD,EAAEnO,OAASsI","file":"static/js/course.2b240cb7.chunk.js","sourcesContent":["/**\n * cuid.js\n * Collision-resistant UID generator for browsers and node.\n * Sequential for fast db lookups and recency sorting.\n * Safe for element IDs and server-side lookups.\n *\n * Extracted from CLCTR\n *\n * Copyright (c) Eric Elliott 2012\n * MIT License\n */\n\nvar fingerprint = require('./lib/fingerprint.js');\nvar pad = require('./lib/pad.js');\nvar getRandomValue = require('./lib/getRandomValue.js');\n\nvar c = 0,\n  blockSize = 4,\n  base = 36,\n  discreteValues = Math.pow(base, blockSize);\n\nfunction randomBlock () {\n  return pad((getRandomValue() *\n    discreteValues << 0)\n    .toString(base), blockSize);\n}\n\nfunction safeCounter () {\n  c = c < discreteValues ? c : 0;\n  c++; // this is not subliminal\n  return c - 1;\n}\n\nfunction cuid () {\n  // Starting with a lowercase letter makes\n  // it HTML element ID friendly.\n  var letter = 'c', // hard-coded allows for sequential access\n\n    // timestamp\n    // warning: this exposes the exact date and time\n    // that the uid was created.\n    timestamp = (new Date().getTime()).toString(base),\n\n    // Prevent same-machine collisions.\n    counter = pad(safeCounter().toString(base), blockSize),\n\n    // A few chars to generate distinct ids for different\n    // clients (so different computers are far less\n    // likely to generate the same id)\n    print = fingerprint(),\n\n    // Grab some more chars from Math.random()\n    random = randomBlock() + randomBlock();\n\n  return letter + timestamp + counter + print + random;\n}\n\ncuid.slug = function slug () {\n  var date = new Date().getTime().toString(36),\n    counter = safeCounter().toString(36).slice(-4),\n    print = fingerprint().slice(0, 1) +\n      fingerprint().slice(-1),\n    random = randomBlock().slice(-2);\n\n  return date.slice(-2) +\n    counter + print + random;\n};\n\ncuid.isCuid = function isCuid (stringToCheck) {\n  if (typeof stringToCheck !== 'string') return false;\n  if (stringToCheck.startsWith('c')) return true;\n  return false;\n};\n\ncuid.isSlug = function isSlug (stringToCheck) {\n  if (typeof stringToCheck !== 'string') return false;\n  var stringLength = stringToCheck.length;\n  if (stringLength >= 7 && stringLength <= 10) return true;\n  return false;\n};\n\ncuid.fingerprint = fingerprint;\n\nmodule.exports = cuid;\n","var pad = require('./pad.js');\n\nvar env = typeof window === 'object' ? window : self;\nvar globalCount = Object.keys(env).length;\nvar mimeTypesLength = navigator.mimeTypes ? navigator.mimeTypes.length : 0;\nvar clientId = pad((mimeTypesLength +\n  navigator.userAgent.length).toString(36) +\n  globalCount.toString(36), 4);\n\nmodule.exports = function fingerprint () {\n  return clientId;\n};\n","\nvar getRandomValue;\n\nvar crypto = typeof window !== 'undefined' &&\n  (window.crypto || window.msCrypto) ||\n  typeof self !== 'undefined' &&\n  self.crypto;\n\nif (crypto) {\n    var lim = Math.pow(2, 32) - 1;\n    getRandomValue = function () {\n        return Math.abs(crypto.getRandomValues(new Uint32Array(1))[0] / lim);\n    };\n} else {\n    getRandomValue = Math.random;\n}\n\nmodule.exports = getRandomValue;\n","import * as yup from \"yup\"\nimport {passwordNotLongEnough} from \"./errorMessages.js\"\n\nexport const titleNotLongEnough = \"Course titles must be at least 10 characters\"\nexport const descriptionNotLongEnough =\n  \"Course description must be at least 100 characters\"\nexport const descriptionTooLong =\n  \"Course description cannot exceed 350 characters\"\nexport const nameTooLong = \"Course name cannot exceed 100 characters\"\n\nexport const registerPasswordValidation = yup\n  .string()\n  .min(3, passwordNotLongEnough)\n  .max(255)\n\nexport const courseCreateSchema = yup.object().shape({\n  title: yup\n    .string()\n    .min(10, titleNotLongEnough)\n    .max(100, nameTooLong)\n    .required(\"A course title is required\"),\n  courseDescription: yup\n    .string()\n    .min(100, descriptionNotLongEnough)\n    .max(350, descriptionTooLong)\n    .required(\"A course description is required\"),\n  usingLang: yup.string().required(\"This field is required.\"),\n  teachingLang: yup.string().required(\"This field is required.\")\n})\n\nexport const courseSchema = yup.object().shape({\n  title: yup\n    .string()\n    .required(\"A course title is required\")\n    .min(10, titleNotLongEnough)\n    .max(100, nameTooLong),\n  courseDescription: yup\n    .string()\n    .min(100, descriptionNotLongEnough)\n    .max(350, descriptionTooLong)\n    .required(\"A course description is required\")\n})\n","const duplicateEmail = \"already taken\"\nconst emailNotLongEnough = \"email must be at least 3 characters long\"\nconst passwordNotLongEnough = \"password must be at least 3 characters long\"\nconst invalidEmail = \"email must be a valid email\"\nexport {duplicateEmail, emailNotLongEnough, invalidEmail, passwordNotLongEnough}\n","/* eslint-disable */\nimport React, {Component} from \"react\"\nimport {withRouter} from \"react-router-dom\"\nimport {Helmet} from \"react-helmet-async\"\nimport {compose, graphql} from \"react-apollo\"\nimport Grid from \"@material-ui/core/Grid\"\nimport Typography from \"@material-ui/core/Typography\"\nimport {withStyles} from \"@material-ui/core/styles\"\nimport gql from \"graphql-tag\"\nimport {session} from \"brownies\"\nimport {toast} from \"react-toastify\"\n\nimport {Field, withFormik} from \"formik\"\nimport isEmpty from \"lodash/isEmpty\"\nimport cloneDeep from \"lodash/cloneDeep\"\nimport Dropzone from \"react-dropzone\"\nimport cuid from \"cuid\"\nimport styled from \"styled-components\"\n/* import {courseCreateSchema} from \"@utterzone/common\" */\nimport {courseCreateSchema} from \"../yupSchemas.js\"\nimport CryptoJS from \"crypto-js\"\nimport {groupedOptions} from \"../../../data/language-data.js\"\nimport {\n  FormikInput,\n  FormikTextArea,\n  Span,\n  Img,\n  LoadingButton,\n  Teaching,\n  Using\n} from \"../../../components\"\n\nimport {handleCloudinaryUpload} from \"../../../utils/cloudinary-utils.js\"\n\nconst DisplayCount = styled.div`\n  font-size: 0.8rem;\n  position: absolute;\n  right: 2%;\n  top: 6px;\n`\nconst StyledSpan = styled(Span)`\n  display: none;\n  font-size: 0.6rem;\n  padding: 0 0 0 10px;\n\n  @media (min-width: 640px) {\n    display: ${props => props.display640};\n  }\n`\n\nconst initialState = {\n  cdn: {},\n  charCount: 0,\n  courseId: cuid(),\n  courseImage: \"\",\n  resource: \"\",\n  disabled: false,\n  displayName: \"\",\n  errors: {},\n  levels: [{level: 1, cuid: cuid()}],\n  loading: false,\n  public_id: \"\",\n  secure_url: \"\",\n  signature: \"\",\n  teachingLang: \"\",\n  terms: [{word: \"Change me\", translation: \"Change me\", audio: \"audio.mp3\"}],\n  uploadedFile: {},\n  url: \"\",\n  usingLang: \"\"\n}\n\nconst styles = theme => ({\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3\n  },\n  heading: {\n    color: \"white\"\n  },\n  heroUnit: {\n    backgroundColor: \"#2b59ae\"\n  },\n  heroContent: {\n    maxWidth: 960,\n    margin: \"0 auto\",\n    padding: `${theme.spacing.unit * 8}px ${theme.spacing.unit * 6}px ${theme\n      .spacing.unit * 6}px`\n  },\n  heroButtons: {\n    marginTop: theme.spacing.unit * 4\n  },\n  masthead: {\n    padding: theme.spacing.unit * 1,\n    margin: \"auto\",\n    maxWidth: 900,\n    [`@media (max-width:770px)`]: {\n      flexDirection: \"column\"\n    }\n  },\n  root: {\n    maxWidth: 960,\n    margin: \"0 auto\"\n  },\n  subHeading: {\n    color: \"black\",\n    marginTop: \"40px\",\n    position: \"relative\"\n  }\n})\n\nconst COURSE_CREATE_MUTATION = gql`\n  mutation courseCreate(\n    $title: String!\n    $courseImage: String\n    $courseDescription: String\n    $courseMode: String\n    $resource: String\n    $teachingLang: String\n    $usingLang: String\n  ) {\n    courseCreate(\n      input: {\n        title: $title\n        courseImage: $courseImage\n        courseDescription: $courseDescription\n        courseMode: $courseMode\n        resource: $resource\n        teachingLang: $teachingLang\n        usingLang: $usingLang\n      }\n    ) {\n      _id\n      courseDescription\n      courseImage\n      courseMode\n      title\n      owner {\n        username\n      }\n      teachingLang\n      usingLang\n    }\n  }\n`\n\nclass CourseCreate extends Component {\n  constructor(props) {\n    super(props)\n    this.state = cloneDeep(initialState)\n  }\n\n  componentDidMount() {\n    // clear state\n    this.setState(initialState)\n  }\n\n  componentWillUnmount() {\n    URL.revokeObjectURL(this.state.uploadedFilePreview)\n  }\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  addTeachingLang = value => {\n    this.setState({\n      teachingLang: value\n    })\n  }\n\n  addUsingLang = value => {\n    this.setState({\n      usingLang: value\n    })\n  }\n\n  onImageDrop = (files, rejected) => {\n    if (!isEmpty(rejected)) {\n      alert(\"Please decrease the image size to less than 500kb.\")\n    }\n\n    if (!isEmpty(files)) {\n      this.setState(\n        {\n          uploadedFile: files[0],\n          uploadedFilePreview: URL.createObjectURL(files[0])\n        },\n        () =>\n          this.props.setValues({\n            ...this.props.values,\n            uploadedFile: files[0]\n          })\n      )\n    }\n  }\n\n  handleImageDelete = async state => {\n    if (this.state.public_id) {\n      const timestamp = await (Date.now() / 1000 || 0).toString()\n      const apiSecret = process.env.CLOUDINARY_API_SECRET\n      const hashString = `public_id=${\n        state.public_id\n      }&timestamp=${timestamp}${apiSecret}`\n      const signature = CryptoJS.SHA1(hashString).toString()\n\n      var formdata = new FormData()\n\n      formdata.append(\"api_key\", process.env.CLOUDINARY_API_KEY)\n      formdata.append(\"public_id\", state.public_id)\n      formdata.append(\"resource_type\", \"image\")\n      formdata.append(\"signature\", signature)\n      formdata.append(\"timestamp\", timestamp)\n\n      var xhr = new XMLHttpRequest()\n\n      xhr.open(\n        \"POST\",\n        `https://api.cloudinary.com/v1_1/${\n          process.env.CLOUDINARY_CLOUD_NAME\n        }/image/destroy`,\n        true\n      )\n\n      xhr.send(formdata)\n    }\n  }\n\n  render() {\n    const {\n      classes,\n      errors,\n      handleSubmit,\n      isSubmitting,\n      setFieldTouched,\n      setFieldValue,\n      touched,\n      values\n    } = this.props\n    const {title, courseDescription, usingLang} = this.props.values\n    return (\n      <React.Fragment>\n        <form className={classes.root} onSubmit={handleSubmit}>\n          <Helmet>\n            <meta charset=\"utf-8\" />\n            <meta\n              name=\"viewport\"\n              content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"\n            />\n            <meta\n              name=\"description\"\n              content=\"Design your own course and help others learn the language you love!\"\n            />\n            <meta name=\"author\" content=\"Isaac Pak\" />\n            <title>Utterzone | Create a Course</title>\n            <link rel=\"canonical\" href=\"https://utterzone.com/course/create\" />\n          </Helmet>\n          {/*   Hero unit */}\n          <div className={classes.heroUnit}>\n            <div className={classes.heroContent}>\n              <Grid container justify=\"center\" direction=\"column\">\n                <Typography\n                  align=\"center\"\n                  variant=\"h4\"\n                  className={classes.heading}\n                  gutterBottom>\n                  Create a Course\n                </Typography>\n                <Typography\n                  align=\"center\"\n                  variant=\"h6\"\n                  className={classes.heading}\n                  gutterBottom>\n                  This is where you can build a course from current resource\n                  like a school textbook or another language course. Other\n                  people can subscribe to your course and practice speaking from\n                  it!\n                </Typography>\n              </Grid>\n            </div>\n          </div>\n          {/*     End hero unit  */}\n          <main className={classes.content}>\n            <Grid container spacing={24}>\n              <Grid item>\n                <Typography align=\"left\" variant=\"h6\" gutterBottom>\n                  Course Thumbnail\n                </Typography>\n                <Typography align=\"left\" variant=\"body1\" gutterBottom>\n                  Format: png or jpg, Dimensions: ~300px by 300px, Maximum size\n                  limit: 500kb\n                </Typography>\n              </Grid>\n              <Grid item xs={12}>\n                <div style={{margin: \"50px\", textAlign: \"center\"}}>\n                  {!this.state.uploadedFilePreview ? (\n                    <p>Thumbnail Preview</p>\n                  ) : (\n                    <Img\n                      alt=\"thumbnail\"\n                      label=\"Course Thumbnail Preview\"\n                      name=\"image\"\n                      src={this.state.uploadedFilePreview}\n                      size=\"small\"\n                    />\n                  )}\n                  <p>{this.state.uploadedFile.name}</p>\n                  {!this.state.disabled && <div />}\n                  <Dropzone\n                    maxSize={500000}\n                    multiple={false}\n                    accept=\"image/*\"\n                    onDrop={this.onImageDrop}>\n                    {({getRootProps, getInputProps}) => (\n                      <section>\n                        <div\n                          style={{\n                            margin: \"50px auto\",\n                            padding: \"3px\",\n                            position: \"relative\",\n                            width: \"200px\",\n                            height: \"100px\",\n                            borderWidth: \"2px\",\n                            borderColor: \"rgb(102, 102, 102)\",\n                            borderStyle: \"dashed\",\n                            borderRadius: \"5px\",\n                            alignItems: \"center\",\n                            display: \"flex\"\n                          }}\n                          {...getRootProps()}>\n                          <input {...getInputProps()} />\n                          <p>\n                            Drop an image or click to select a file to upload.\n                          </p>\n                        </div>\n                      </section>\n                    )}\n                  </Dropzone>{\" \"}\n                </div>\n              </Grid>\n              <Grid item xs={12}>\n                <Typography\n                  align=\"left\"\n                  variant=\"h6\"\n                  className={classes.subHeading}\n                  gutterBottom>\n                  Course Name\n                  <StyledSpan display640=\"inline-block\">\n                    {\" \"}\n                    (10-100 chars.)\n                  </StyledSpan>\n                  <DisplayCount>{title.length}</DisplayCount>\n                </Typography>\n                <Field\n                  fullWidth\n                  id=\"outlined-search\"\n                  name=\"title\"\n                  label=\"Course Title\"\n                  type=\"text\"\n                  component={FormikInput}\n                  margin=\"normal\"\n                  required\n                  variant=\"outlined\"\n                />\n                <Typography\n                  align=\"left\"\n                  variant=\"h6\"\n                  className={classes.subHeading}\n                  gutterBottom>\n                  Course Description\n                  <StyledSpan display640=\"inline-block\">\n                    {\" \"}\n                    (100-350 chars.)\n                  </StyledSpan>\n                  <DisplayCount>{courseDescription.length}</DisplayCount>\n                </Typography>\n                <Field\n                  fullWidth\n                  id=\"outlined-search\"\n                  name=\"courseDescription\"\n                  label=\"Course Description\"\n                  type=\"text\"\n                  component={FormikTextArea}\n                  margin=\"normal\"\n                  required\n                  variant=\"outlined\"\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <Typography\n                  align=\"left\"\n                  variant=\"h6\"\n                  className={classes.subHeading}\n                  gutterBottom>\n                  Using Language\n                </Typography>\n                <Field\n                  name=\"usingLang\"\n                  error={errors.usingLang}\n                  component={Using}\n                  addUsingLang={this.addUsingLang}\n                  options={groupedOptions}\n                  onChange={setFieldValue}\n                  touched={touched.usingLang}\n                  value={values.usingLang}\n                />\n                <Typography\n                  align=\"left\"\n                  variant=\"h6\"\n                  className={classes.subHeading}\n                  gutterBottom>\n                  Teaching Language\n                </Typography>\n                <Field\n                  error={errors.teachingLang}\n                  name=\"teachingLang\"\n                  component={Teaching}\n                  addTeachingLang={this.addTeachingLang}\n                  onChange={setFieldValue}\n                  options={groupedOptions}\n                  touched={touched.usingLang}\n                  value={values.teachingLang}\n                />\n                <Typography\n                  align=\"left\"\n                  variant=\"h6\"\n                  className={classes.subHeading}\n                  gutterBottom>\n                  Resource\n                </Typography>\n                <p>ie. Book, Classroom, Online Course</p>\n                <Field\n                  id=\"resource\"\n                  label=\"Resource\"\n                  type=\"text\"\n                  name=\"resource\"\n                  component={FormikInput}\n                />\n                <Grid\n                  item\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    margin: \"60px\"\n                  }}>\n                  <LoadingButton\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    type=\"submit\"\n                    size=\"large\"\n                    loading={isSubmitting}\n                    disabled={isSubmitting}>\n                    Create Course\n                  </LoadingButton>\n                </Grid>\n              </Grid>\n            </Grid>\n          </main>\n        </form>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default compose(\n  graphql(COURSE_CREATE_MUTATION, {name: \"courseCreate\"}),\n  withRouter,\n  withFormik({\n    validationSchema: courseCreateSchema,\n    validateOnChange: false,\n    validateOnBlur: false,\n    mapPropsToValues: () => ({\n      title: \"\",\n      courseImage:\n        \"https://res.cloudinary.com/dgvw5b6pf/image/upload/v1545873897/course-thumbnails/fa-image_kzo6kn.jpg\",\n      courseDescription: \"\",\n      courseMode: \"draft\",\n      resource: \"\",\n      teachingLang: \"\",\n      topics: [],\n      usingLang: \"\"\n    }),\n    handleSubmit: async (values, {props, setErrors}) => {\n      const cdnUpload = await handleCloudinaryUpload(\n        values.uploadedFile,\n        \"image\",\n        \"course-thumbnails\"\n      )\n\n      const merge = cdnUpload => {\n        return {...values, secure_url: cdnUpload.secure_url}\n      }\n\n      const result = merge(cdnUpload)\n      const course = await props.courseCreate({\n        variables: {\n          title: result.title,\n          courseDescription: result.courseDescription,\n          courseImage: result.secure_url,\n          courseMode: result.courseMode,\n          resource: result.resource,\n          teachingLang: result.teachingLang,\n          usingLang: result.usingLang\n        }\n      })\n\n      const onComplete = course => {\n        session.level = \"\"\n        session.course = course.data.courseCreate\n        props.history.push({\n          pathname: \"/course/course-introduction\",\n          state: {courseId: course.data.courseCreate._id}\n        })\n      }\n\n      // if create is legit\n      if (course) {\n        onComplete(course)\n        toast.success(\"Start building your course.\", {\n          className: \"toasty\",\n          bodyClassName: \"toasty-body\",\n          hideProgressBar: true\n        })\n      } else {\n        setErrors(course.COURSE_CREATE_MUTATION.errors)\n        toast.error(\"Something went wrong. Could not create a course.\", {\n          className: \"toasty\",\n          bodyClassName: \"toasty-body\",\n          hideProgressBar: true\n        })\n      }\n    }\n  }),\n  withStyles(styles)\n)(CourseCreate)\n","var baseClone = require('./_baseClone');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nmodule.exports = cloneDeep;\n","export const northAmericaOptions = [\n  {\n    value: \"english US\",\n    label: \"English US\"\n  }\n]\n\nexport const southAmericaOptions = [\n  {\n    value: \"spanish-mexican\",\n    label: \"Spanish (Mexican)\"\n  },\n  {\n    value: \"spanish-peruvian\",\n    label: \"Spanish (Peruvian)\"\n  },\n  {\n    value: \"portuguese-brazil\",\n    label: \"Portuguese (Brazil)\"\n  }\n]\n\nexport const australiaOptions = [\n  {\n    value: \"australian\",\n    label: \"Australian English\"\n  }\n]\n\nexport const europeOptions = [\n  {\n    value: \"english-uk\",\n    label: \"English (UK)\"\n  },\n  {\n    value: \"spanish-castilian\",\n    label: \"Spanish (Castilian)\"\n  },\n  {\n    value: \"french\",\n    label: \"French\"\n  },\n  {\n    value: \"italian\",\n    label: \"Italian\"\n  },\n  {\n    value: \"portuguese-Portugal\",\n    label: \"Portuguese (Portugal)\"\n  },\n  {\n    value: \"dutch\",\n    label: \"Dutch\"\n  },\n  {\n    value: \"finnish\",\n    label: \"Finnish\"\n  },\n  {\n    value: \"danish\",\n    label: \"Danish\"\n  },\n  {\n    value: \"greek\",\n    label: \"Greek\"\n  },\n  {\n    value: \"norwegian\",\n    label: \"Norwegian\"\n  },\n  {\n    value: \"swedish\",\n    label: \"Swedish\"\n  },\n  {\n    value: \"albanian\",\n    label: \"Albanian\"\n  },\n  {\n    value: \"armenian\",\n    label: \"Armenian\"\n  },\n  {\n    value: \"eastern-armenian\",\n    label: \"Eastern Armenian\"\n  },\n  {\n    value: \"western-armenian\",\n    label: \"Western Armenian\"\n  },\n  {\n    value: \"basque\",\n    label: \"Basque\"\n  },\n  {\n    value: \"breton\",\n    label: \"Breton\"\n  },\n  {\n    value: \"catalan\",\n    label: \"Catalan\"\n  },\n  {\n    value: \"cornish\",\n    label: \"Cornish\"\n  },\n  {\n    value: \"estonian\",\n    label: \"Estonian\"\n  },\n  {\n    value: \"faroese\",\n    label: \"Faroese\"\n  },\n  {\n    value: \"flemish\",\n    label: \"Flemish\"\n  },\n  {\n    value: \"georgian\",\n    label: \"Georgian\"\n  },\n  {\n    value: \"gothic\",\n    label: \"Gothic\"\n  },\n  {\n    value: \"hungarian\",\n    label: \"Hungarian\"\n  },\n  {\n    value: \"icelandic\",\n    label: \"Icelandic\"\n  },\n  {\n    value: \"irish\",\n    label: \"Irish\"\n  },\n  {\n    value: \"ladin\",\n    label: \"Ladin\"\n  },\n  {\n    value: \"ladino\",\n    label: \"Ladino\"\n  },\n  {\n    value: \"latvian\",\n    label: \"Latvian\"\n  },\n  {\n    value: \"lithuanian\",\n    label: \"Lithuanian\"\n  },\n  {\n    value: \"luxembourgish\",\n    label: \"Luxembourgish\"\n  },\n  {\n    value: \"maltese\",\n    label: \"Maltese\"\n  },\n  {\n    value: \"manx\",\n    label: \"Manx\"\n  },\n  {\n    value: \"occitan \",\n    label: \"Occitan \"\n  },\n  {\n    value: \"romanian\",\n    label: \"Romanian\"\n  },\n  {\n    value: \"sami \",\n    label: \"Sami \"\n  },\n  {\n    value: \"lule-sami \",\n    label: \"Lule Sami \"\n  },\n  {\n    value: \"northern-sami \",\n    label: \"Northern Sami \"\n  },\n  {\n    value: \"southern-sami \",\n    label: \"Southern Sami \"\n  },\n  {\n    value: \"ume\",\n    label: \"Ume\"\n  },\n  {\n    value: \"scots\",\n    label: \"Scots\"\n  },\n  {\n    value: \"scottish \",\n    label: \"Scottish \"\n  },\n  {\n    value: \"welsh\",\n    label: \"Welsh\"\n  }\n]\n\nexport const germanOptions = [\n  {\n    value: \"German\",\n    label: \"German\"\n  },\n  {\n    value: \"small-german-dialects\",\n    label: \"Small German Dialects\"\n  },\n  {\n    value: \"swiss-German\",\n    label: \"Swiss German\"\n  }\n]\n\nexport const asiaOptions = [\n  {\n    value: \"indonesian\",\n    label: \"Indonesian\"\n  },\n  {\n    value: \"korean\",\n    label: \"Korean\"\n  },\n  {\n    value: \"thai\",\n    label: \"Thai\"\n  },\n  {\n    value: \"vietnamese\",\n    label: \"Vietnamese\"\n  },\n  {\n    value: \"mongolian\",\n    label: \"Mongolian\"\n  },\n  {\n    value: \"azerbaijani\",\n    label: \"Azerbaijani\"\n  },\n  {\n    value: \"hawaiian\",\n    label: \"Hawaiian\"\n  },\n  {\n    value: \"kazakh\",\n    label: \"Kazakh\"\n  },\n  {\n    value: \"ainu\",\n    label: \"Ainu\"\n  },\n  {\n    value: \"burmese\",\n    label: \"Burmese\"\n  },\n  {\n    value: \"cebuano\",\n    label: \"Cebuano\"\n  },\n  {\n    value: \"dzongkha\",\n    label: \"Dzongkha\"\n  },\n  {\n    value: \"javanese\",\n    label: \"Javanese\"\n  },\n  {\n    value: \"karen \",\n    label: \"Karen \"\n  },\n  {\n    value: \"khmer\",\n    label: \"Khmer\"\n  },\n  {\n    value: \"kyrgyz\",\n    label: \"Kyrgyz\"\n  },\n  {\n    value: \"laz\",\n    label: \"Laz\"\n  },\n  {\n    value: \"lu\",\n    label: \"Lu\"\n  },\n  {\n    value: \"malay\",\n    label: \"Malay\"\n  },\n  {\n    value: \"maori\",\n    label: \"Maori\"\n  },\n  {\n    value: \"marshallese\",\n    label: \"Marshallese\"\n  },\n  {\n    value: \"nepali\",\n    label: \"Nepali\"\n  },\n  {\n    value: \"tagalog\",\n    label: \"Tagalog\"\n  },\n  {\n    value: \"tibetan\",\n    label: \"Tibetan\"\n  }\n]\n\nexport const chineseOptions = [\n  {\n    value: \"chinese-simplified\",\n    label: \"Chinese Simplified\"\n  },\n  {\n    value: \"chinese-traditional\",\n    label: \"Chinese Traditional\"\n  },\n  {\n    value: \"mandarin-spoken-only\",\n    label: \"Mandarin (Spoken Only)\"\n  },\n  {\n    value: \"cantonese\",\n    label: \"Cantonese\"\n  },\n  {\n    value: \"cantonese-jyutping\",\n    label: \"Cantonese Jyutping\"\n  },\n  {\n    value: \"ningbo-dialect\",\n    label: \"Ningbo Dialect\"\n  },\n  {\n    value: \"taishanese\",\n    label: \"Taishanese\"\n  },\n  {\n    value: \"hakka\",\n    label: \"Hakka\"\n  }\n]\n\nexport const japaneseOptions = [\n  {\n    value: \"japanese\",\n    label: \"Japanese\"\n  },\n  {\n    value: \"kanji\",\n    label: \"Kanji\"\n  },\n  {\n    value: \"japanese-no-script\",\n    label: \"Japanese (no script)\"\n  }\n]\n\nexport const indianOptions = [\n  {\n    value: \"bengali\",\n    label: \"Bengali\"\n  },\n  {\n    value: \"gujarati\",\n    label: \"Gujarati\"\n  },\n  {\n    value: \"hindi\",\n    label: \"Hindi\"\n  },\n  {\n    value: \"telugu\",\n    label: \"Telugu\"\n  },\n  {\n    value: \"urdu\",\n    label: \"Urdu\"\n  },\n  {\n    value: \"marathi\",\n    label: \"Marathi\"\n  },\n  {\n    value: \"kannada\",\n    label: \"Kannada\"\n  },\n  {\n    value: \"malayalam\",\n    label: \"Malayalam\"\n  },\n  {\n    value: \"pali\",\n    label: \"Pali\"\n  },\n  {\n    value: \"punjabi\",\n    label: \"Punjabi\"\n  },\n  {\n    value: \"sanskrit\",\n    label: \"Sanskrit\"\n  },\n  {\n    value: \"tamang\",\n    label: \"Tamang\"\n  },\n  {\n    value: \"tamil\",\n    label: \"Tamil\"\n  }\n]\n\nexport const arabicOptions = [\n  {\n    value: \"arabic\",\n    label: \"Arabic\"\n  },\n  {\n    value: \"arabic Alphabet\",\n    label: \"Arabic Alphabet\"\n  },\n  {\n    value: \"classical-quranic-arabic\",\n    label: \"Classical Quranic Arabic\"\n  },\n  {\n    value: \"egyptian-arabic\",\n    label: \"Egyptian Arabic\"\n  },\n  {\n    value: \"gulf-khaliji-arabic\",\n    label: \"Gulf Khaliji Arabic\"\n  },\n  {\n    value: \"iraqi-arabic\",\n    label: \"Iraqi Arabic\"\n  },\n  {\n    value: \"levantine-arabic\",\n    label: \"Levantine Arabic\"\n  },\n  {\n    value: \"modern-standard-arabic-roman-alphabet\",\n    label: \"Modern Standard Arabic (roman alphabet)\"\n  },\n  {\n    value: \"north-african-maghrebi-arabic\",\n    label: \"North African Maghrebi Arabic\"\n  }\n]\n\nexport const middleEastOptions = [\n  {\n    value: \"hebrew\",\n    label: \"Hebrew\"\n  },\n  {\n    value: \"turkish\",\n    label: \"Turkish\"\n  },\n  {\n    value: \"aramaic\",\n    label: \"Aramaic\"\n  },\n  {\n    value: \"kurdish\",\n    label: \"Kurdish\"\n  },\n  {\n    value: \"persian\",\n    label: \"Persian\"\n  },\n  {\n    value: \"yiddish\",\n    label: \"Yiddish\"\n  }\n]\n\nexport const slavicOptions = [\n  {\n    value: \"russian\",\n    label: \"Russian\"\n  },\n  {\n    value: \"bosnian\",\n    label: \"Bosnian\"\n  },\n  {\n    value: \"croatian\",\n    label: \"Croatian\"\n  },\n  {\n    value: \"czech\",\n    label: \"Czech\"\n  },\n  {\n    value: \"polish\",\n    label: \"Polish\"\n  },\n  {\n    value: \"serbian\",\n    label: \"Serbian\"\n  },\n  {\n    value: \"bulgarian\",\n    label: \"Bulgarian\"\n  },\n  {\n    value: \"slovak\",\n    label: \"Slovak\"\n  },\n  {\n    value: \"slovenian\",\n    label: \"Slovenian\"\n  },\n  {\n    value: \"ukrainian\",\n    label: \"Ukrainian\"\n  },\n  {\n    value: \"belarusian\",\n    label: \"Belarusian\"\n  },\n  {\n    value: \"circassian \",\n    label: \"Circassian \"\n  },\n  {\n    value: \"macedonian\",\n    label: \"Macedonian\"\n  },\n  {\n    value: \"ossetic\",\n    label: \"Ossetic\"\n  },\n  {\n    value: \"other-slavic\",\n    label: \"Other Slavic\"\n  }\n]\n\nexport const africaOptions = [\n  {\n    value: \"coptic\",\n    label: \"Coptic\"\n  },\n  {\n    value: \"swahili\",\n    label: \"Swahili\"\n  },\n  {\n    value: \"afrikaans\",\n    label: \"Afrikaans\"\n  },\n  {\n    value: \"akan\",\n    label: \"Akan\"\n  },\n  {\n    value: \"amharic\",\n    label: \"Amharic\"\n  },\n  {\n    value: \"hausa\",\n    label: \"Hausa\"\n  },\n  {\n    value: \"kaonde\",\n    label: \"Kaonde\"\n  },\n  {\n    value: \"kinyarwanda\",\n    label: \"Kinyarwanda\"\n  },\n  {\n    value: \"luganda\",\n    label: \"Luganda\"\n  },\n  {\n    value: \"malagasy\",\n    label: \"Malagasy\"\n  },\n  {\n    value: \"mandinka\",\n    label: \"Mandinka\"\n  },\n  {\n    value: \"nyanja\",\n    label: \"Nyanja\"\n  },\n  {\n    value: \"somali\",\n    label: \"Somali\"\n  },\n  {\n    value: \"soninke\",\n    label: \"Soninke\"\n  },\n  {\n    value: \"wolof\",\n    label: \"Wolof\"\n  },\n  {\n    value: \"zulu\",\n    label: \"Zulu\"\n  }\n]\n\nexport const classicsOptions = [\n  {\n    value: \"latin\",\n    label: \"Latin\"\n  },\n  {\n    value: \"ancient-greek\",\n    label: \"Ancient Greek\"\n  }\n]\n\nexport const nativeAmericanOptions = [\n  {\n    value: \"cherokee\",\n    label: \"Cherokee\",\n    className: \"languageOption\"\n  },\n  {\n    value: \"algonquian\",\n    label: \"Algonquian\",\n    className: \"languageOption\"\n  },\n  {\n    value: \"alutiiq\",\n    label: \"Alutiiq\",\n    className: \"languageOption\"\n  },\n  {\n    value: \"choctaw\",\n    label: \"Choctaw\",\n    className: \"languageOption\"\n  },\n  {\n    value: \"citizen-potawatomi\",\n    label: \"Citizen Potawatomi\",\n    className: \"languageOption\"\n  },\n  {\n    value: \"greenlandic\",\n    label: \"Greenlandic\",\n    className: \"languageOption\"\n  },\n  {\n    value: \"guarani\",\n    label: \"Guarani\",\n    className: \"languageOption\"\n  },\n  {\n    value: \"inuktitut\",\n    label: \"Inuktitut\",\n    className: \"languageOption\"\n  },\n  {\n    value: \"lakota\",\n    label: \"Lakota\",\n    className: \"languageOption\"\n  },\n  {\n    value: \"nahuatl \",\n    label: \"Nahuatl \",\n    className: \"languageOption\"\n  },\n  {\n    value: \"quechua\",\n    label: \"Quechua\",\n    className: \"languageOption\"\n  }\n]\n\nexport const constructedOptions = [\n  {\n    value: \"esperanto\",\n    label: \"Esperanto\",\n    className: \"languageOption\"\n  },\n  {\n    value: \"interlingua \",\n    label: \"Interlingua \",\n    className: \"languageOption\"\n  },\n  {\n    value: \"klingon\",\n    label: \"Klingon\",\n    className: \"languageOption\"\n  },\n  {\n    value: \"lojban\",\n    label: \"Lojban\",\n    className: \"languageOption\"\n  }\n]\n\nexport const groupedOptions = [\n  {\n    value: \"north-america \",\n    label: \"North America\",\n    options: northAmericaOptions\n  },\n  {\n    value: \"south-america \",\n    label: \"South America\",\n    options: southAmericaOptions\n  },\n  {\n    value: \"australian\",\n    label: \"Australia\",\n    options: australiaOptions\n  },\n  {\n    value: \"europe\",\n    label: \"Europe\",\n    options: europeOptions\n  },\n  {\n    value: \"german\",\n    label: \"German\",\n    options: germanOptions\n  },\n  {\n    value: \"asia\",\n    label: \"Asia\",\n    options: asiaOptions\n  },\n  {\n    value: \"chinese\",\n    label: \"Chinese\",\n    options: chineseOptions\n  },\n  {\n    value: \"japaneseLanguages\",\n    label: \"Japanese\",\n    options: japaneseOptions\n  },\n  {\n    value: \"indian\",\n    label: \"Indian\",\n    options: indianOptions\n  },\n  {\n    value: \"middle-east\",\n    label: \"Middle East\",\n    options: middleEastOptions\n  },\n  {\n    value: \"arabicLanguages\",\n    label: \"Arabic\",\n    options: arabicOptions\n  },\n  {\n    value: \"Slavic\",\n    label: \"Slavic\",\n    options: slavicOptions\n  },\n  {\n    value: \"africa\",\n    label: \"Africa\",\n    options: africaOptions\n  },\n  {\n    value: \"classics\",\n    label: \"Classics\",\n    options: classicsOptions\n  },\n  {\n    value: \"native American\",\n    label: \"Native American\",\n    options: nativeAmericanOptions\n  },\n  {\n    value: \"constructed-languages\",\n    label: \"Constructed Languages\",\n    options: constructedOptions\n  }\n]\n","import CryptoJS from \"crypto-js\"\n\n/* @params\n** type: Valid values are image, raw, video(use video for audio) and auto\n** tags: array, use the username inside an array, so we can look them up in the cdn if we have to.\n*/\n\nexport const handleCloudinaryUpload = (file, type, folder, tags) => {\n  return new Promise(resolve => {\n    var formdata = new FormData()\n\n    formdata.append(\"file\", file)\n    formdata.append(\"folder\", folder) // not used, possibly remove\n    formdata.append(\"tags\", tags)\n    formdata.append(\"cloud_name\", process.env.CLOUDINARY_CLOUD_NAME)\n    formdata.append(\"upload_preset\", process.env.CLOUDINARY_UPLOAD_PRESET)\n\n    // NOTE: You need to add the event listeners before calling open() on the request. Otherwise the progress events will not fire.\n\n    var xhr = new XMLHttpRequest()\n\n    xhr.open(\n      \"POST\",\n      `https://api.cloudinary.com/v1_1/${\n        process.env.CLOUDINARY_CLOUD_NAME\n      }/${type}/upload`,\n      true\n    )\n\n    xhr.onload = () => {\n      resolve(JSON.parse(xhr.response))\n    }\n\n    xhr.onerror = () => {\n      resolve(undefined)\n    }\n\n    xhr.send(formdata)\n  })\n}\n\nexport const getPublicId = url => {\n  var split = url.split(\"/\")\n  var lastIndex = split[split.length - 1]\n  lastIndex = lastIndex.substring(0, lastIndex.lastIndexOf(\".\"))\n  console.log(typeof lastIndex)\n  console.log(lastIndex)\n  return lastIndex\n}\n\n// TODO:\n// review this and replace the existing one in course-create\n// moved to server for Admin API\n\nexport const handleCloudinaryDelete = (url, type) => {\n  return new Promise(resolve => {\n    console.log(\"type: \", type)\n    const public_id = getPublicId(url)\n\n    const timestamp = (Date.now() / 1000 || 0).toString()\n    const apiSecret = process.env.CLOUDINARY_API_SECRET\n    const hashString = `public_id=${public_id}&timestamp=${timestamp}${apiSecret}`\n    const signature = CryptoJS.SHA1(hashString).toString()\n\n    var formdata = new FormData()\n\n    formdata.append(\"api_key\", process.env.CLOUDINARY_API_KEY)\n    /* formdata.append(\"public_id\", public_id) */\n    formdata.append(\"signature\", signature)\n    formdata.append(\"timestamp\", timestamp)\n\n    var xhr = new XMLHttpRequest()\n\n    /* xhr.open( */\n    /*   \"DELETE\", */\n    /*   `https://api.cloudinary.com/v1_1/${ */\n    /*     process.env.CLOUDINARY_CLOUD_NAME */\n    /*   }/resources/${type}`, */\n    /*   true */\n    /* ) */\n\n    xhr.open(\n      \"POST\",\n      `https://api.cloudinary.com/v1_1/${\n        process.env.CLOUDINARY_CLOUD_NAME\n      }/derived_resources?derived_resource_ids[]=${public_id}/destroy`,\n      true\n\n      /* \"POST\", */\n      /* `https://api.cloudinary.com/v1_1/${ */\n      /*   process.env.CLOUDINARY_CLOUD_NAME */\n      /* }/image/destroy`, */\n      /* true */\n    )\n\n    xhr.send(formdata)\n\n    xhr.onload = () => {\n      resolve(JSON.parse(xhr.response))\n    }\n\n    xhr.onerror = () => {\n      resolve(undefined)\n    }\n  })\n}\n","module.exports = function pad (num, size) {\n  var s = '000000000' + num;\n  return s.substr(s.length - size);\n};\n"],"sourceRoot":""}