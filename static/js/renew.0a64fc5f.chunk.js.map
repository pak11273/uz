{"version":3,"sources":["layouts/renew-confirmation.js"],"names":["ConfirmEmail","state","confirmation","classes","this","props","Fragment","className","root","section","validationSchema","renewConfirmationSchema","initialValues","email","onSubmit","values","actions","a","client","mutate","mutation","RENEW_CONFIRAMTION","variables","result","data","errors","toast","error","message","bodyClassName","hideProgressBar","setSubmitting","renewConfirmation","setTimeout","success","resetForm","render","handleChange","handleSubmit","isSubmitting","variant","align","text","gutterBottom","flexdirection","justifycontent","textField","name","onChange","placeholder","component","FormikInput","id","loading","disabled","button","color","type","Component","compose","withApollo","withStyles","theme","margin","backgroundColor","height","background","marginLeft","spacing","unit","marginRight","masthead","padding","maxWidth","flexDirection"],"mappings":"yPAsDMA,E,4MACJC,MAAQ,CACNC,aACE,+G,uDAGM,IAAD,OACCC,EAAYC,KAAKC,MAAjBF,QACAD,EAAiBE,KAAKH,MAAtBC,aACR,OACE,kBAAC,IAAMI,SAAP,KACE,kBAAC,IAAD,CAAWC,UAAWJ,EAAQK,MAC5B,kBAAC,IAAD,CAASD,UAAWJ,EAAQM,SAC1B,kBAAC,IAAD,CACEC,iBAAkBC,wBAClBC,cAAe,CAAEC,MAAO,IACxBC,SAAQ,uCAAE,WAAOC,EAAQC,GAAf,eAAAC,EAAA,sEACa,EAAKZ,MAAMa,OAAOC,OAAO,CAC5CC,SAAUC,IACVC,UAAW,CACTT,MAAOE,EAAOF,SAJV,YACFU,EADE,QAQGC,KAAKC,OARR,uBASNC,QAAMC,MAAMJ,EAAOC,KAAKC,OAAO,GAAGG,QAAS,CACzCrB,UAAW,SACXsB,cAAe,cACfC,iBAAiB,IAEnBd,EAAQe,eAAc,GAdhB,8BAkBJR,EAAOC,KAAKQ,kBAlBR,wBAmBNC,YAAW,WACTjB,EAAQe,eAAc,GACtBL,QAAMQ,QAAQ,sCAAuC,CACnD3B,UAAW,SACXsB,cAAe,cACfC,iBAAiB,IAEnBd,EAAQmB,cACP,KA3BG,2BA+BRT,QAAMC,MAAM,sCAAuC,CACjDpB,UAAW,SACXsB,cAAe,cACfC,iBAAiB,IAGnBG,YAAW,WACTjB,EAAQe,eAAc,KACrB,KAvCK,4CAAF,wDAyCRK,OAAQ,gBACNX,EADM,EACNA,OACAY,EAFM,EAENA,aACAC,EAHM,EAGNA,aACAC,EAJM,EAINA,aAJM,OAMN,0BAAMzB,SAAUwB,GACd,kBAAC,IAAD,CACEE,QAAQ,KACRC,MAAM,SACNlC,UAAWJ,EAAQuC,KACnBC,cAAY,GAEXzC,GAEH,kBAAC,IAAD,CAAM0C,cAAc,MAAMC,eAAe,UACvC,kBAAC,IAAD,CACEtC,UAAWJ,EAAQ2C,UACnBC,KAAK,QACLC,SAAUX,EACVY,YAAY,gBACZC,UAAWC,MAEZ1B,EAAOsB,MAAQ,yBAAKK,GAAG,YAAY3B,EAAOsB,MAC3C,kBAAC,IAAD,CACEM,QAASd,EACTe,SAAUf,EACVhC,UAAWJ,EAAQoD,OACnBC,MAAM,UACNhB,QAAQ,YACRiB,KAAK,UANP,oB,GAjFOC,aAsGZC,4BAAQC,aAAYC,sBAzIpB,SAACC,GAAD,MAAY,CACzBP,OAAQ,CACNQ,OAAQ,QAEVvD,KAAM,CACJwD,gBAAiB,QACjBC,OAAQ,QAEVvB,KAAM,CACJc,MAAO,SAETV,UAAW,CACTiB,OAAQ,OACRG,WAAY,QACZC,WAAYL,EAAMM,QAAQC,KAC1BC,YAAaR,EAAMM,QAAQC,MAE7BE,SAAS,aACPC,QAA8B,EAArBV,EAAMM,QAAQC,KACvBN,OAAQ,OACRU,SAAU,KAHJ,2BAIwB,CAC5BC,cAAe,WAGnBjE,QAAQ,aACN+D,QAA8B,EAArBV,EAAMM,QAAQC,KACvBJ,OAAQ,QACRQ,SAAU,KAHL,2BAIyB,CAC5BC,cAAe,eA2GNf,CAAwC3D","file":"static/js/renew.0a64fc5f.chunk.js","sourcesContent":["/* import gql from \"graphql-tag\" */\nimport {\n  Container,\n  Flex,\n  FormikInput,\n  LoadingButton,\n  Section,\n} from \"../components\"\nimport { Field, Formik } from \"formik\"\nimport React, { Component } from \"react\"\nimport { compose, withApollo } from \"react-apollo\"\n\nimport { RENEW_CONFIRAMTION } from \"../graphql/mutations/user-mutations.js\"\nimport Typography from \"@material-ui/core/Typography\"\nimport { toast } from \"react-toastify\"\nimport { withStyles } from \"@material-ui/core/styles\"\n\n// import {renewConfirmationSchema} from \"@utterzone/common\"\n\nconst styles = (theme) => ({\n  button: {\n    margin: \"30px\",\n  },\n  root: {\n    backgroundColor: \"black\",\n    height: \"100%\",\n  },\n  text: {\n    color: \"white\",\n  },\n  textField: {\n    margin: \"18px\",\n    background: \"white\",\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n  },\n  masthead: {\n    padding: theme.spacing.unit * 1,\n    margin: \"auto\",\n    maxWidth: 900,\n    [`@media (max-width:770px)`]: {\n      flexDirection: \"column\",\n    },\n  },\n  section: {\n    padding: theme.spacing.unit * 1,\n    height: \"100vh\",\n    maxWidth: 900,\n    [`@media (max-width:770px)`]: {\n      flexDirection: \"column\",\n    },\n  },\n})\n\nclass ConfirmEmail extends Component {\n  state = {\n    confirmation:\n      \"We need to confirm your email address.  Did you lose your confirmation email?  We can send you another one.\",\n  }\n\n  render() {\n    const { classes } = this.props\n    const { confirmation } = this.state\n    return (\n      <React.Fragment>\n        <Container className={classes.root}>\n          <Section className={classes.section}>\n            <Formik\n              validationSchema={renewConfirmationSchema}\n              initialValues={{ email: \"\" }}\n              onSubmit={async (values, actions) => {\n                const result = await this.props.client.mutate({\n                  mutation: RENEW_CONFIRAMTION,\n                  variables: {\n                    email: values.email,\n                  },\n                })\n\n                if (result.data.errors) {\n                  toast.error(result.data.errors[0].message, {\n                    className: \"toasty\",\n                    bodyClassName: \"toasty-body\",\n                    hideProgressBar: true,\n                  })\n                  actions.setSubmitting(false)\n                  return\n                }\n\n                if (result.data.renewConfirmation) {\n                  setTimeout(() => {\n                    actions.setSubmitting(false)\n                    toast.success(\"A confirmation email has been sent.\", {\n                      className: \"toasty\",\n                      bodyClassName: \"toasty-body\",\n                      hideProgressBar: true,\n                    })\n                    actions.resetForm()\n                  }, 3000)\n                  return\n                }\n\n                toast.error(\"No email on file with that address.\", {\n                  className: \"toasty\",\n                  bodyClassName: \"toasty-body\",\n                  hideProgressBar: true,\n                })\n\n                setTimeout(() => {\n                  actions.setSubmitting(false)\n                }, 3000)\n              }}\n              render={({\n                errors,\n                handleChange,\n                handleSubmit,\n                isSubmitting,\n              }) => (\n                <form onSubmit={handleSubmit}>\n                  <Typography\n                    variant=\"h6\"\n                    align=\"center\"\n                    className={classes.text}\n                    gutterBottom\n                  >\n                    {confirmation}\n                  </Typography>\n                  <Flex flexdirection=\"row\" justifycontent=\"center\">\n                    <Field\n                      className={classes.textField}\n                      name=\"email\"\n                      onChange={handleChange}\n                      placeholder=\"email address\"\n                      component={FormikInput}\n                    />\n                    {errors.name && <div id=\"feedback\">{errors.name}</div>}\n                    <LoadingButton\n                      loading={isSubmitting}\n                      disabled={isSubmitting}\n                      className={classes.button}\n                      color=\"primary\"\n                      variant=\"contained\"\n                      type=\"submit\"\n                    >\n                      Send\n                    </LoadingButton>\n                  </Flex>\n                </form>\n              )}\n            />\n          </Section>\n        </Container>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default compose(withApollo, withStyles(styles))(ConfirmEmail)\n"],"sourceRoot":""}