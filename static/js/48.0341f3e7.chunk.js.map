{"version":3,"sources":["apps/app-container/index.js","layouts/zones/containers/chat/chat.js","layouts/zones/containers/notebook/notebook.js","layouts/zones/containers/zone.js","layouts/zones/styles.js","graphql/queries/level-queries.js","graphql/queries/zone-queries.js","graphql/fragments/zone-fragments.js","graphql/mutations/zone-mutaions.js","layouts/zones/components/custom-badge.js","layouts/zones/containers/zone-left-drawer.js"],"names":["GetCarousel","Loadable","loader","loading","Loading","AppContainer","minHeight","PureComponent","ChatWindow","styled","div","ChatPanel","NoDots","InputPanel","Scrollable","Chat","props","context","onInput","e","setState","input","target","value","onSendMessage","state","err","console","error","soundClips","document","querySelector","firstChild","removeChild","onMsgReceived","entry","updateChatHistory","handleClickOpen","open","handleClose","onLeave","a","client","mutate","mutation","ZONE_DELETE","variables","_id","session","zone","history","push","chatHistory","concat","scrollChatToBottom","panel","scrollTo","scrollHeight","this","newMessage","navigator","mediaDevices","getUserMedia","log","audio","then","stream","recorder","RecordRTC","type","record","stop","onclick","childNodes","length","disabled","alert","startRecording","style","background","color","createElement","clipContainer","deleteButton","stopRecording","audioURL","src","getDataURL","dataUrl","files","author","actions","loadAudioBlob","classList","add","setAttribute","innerHTML","appendChild","evtTgt","parentNode","catch","data","receiveMsg","user","classes","height","flexdirection","justifycontent","width","minwidth","position","left","minWidth","top","className","outputText","usersList","zoneName","roles","perform","id","username","matchingID","owner","yes","padding","alignItems","margin","onClick","no","ref","map","i","msg","event","key","button","alt","ceoImg","primary","secondary","more","fullWidth","inputProps","maxLength","multiline","rows","rowsMax","onChange","onKeyPress","variant","rightIcon","display","justifyContent","withRouter","withApollo","withStyles","theme","spacing","unit","marginBottom","leftIcon","marginRight","marginLeft","iconSmall","fontSize","Notebook","root","align","backgroundColor","paper","textAlign","palette","text","title","withTheme","Loader","Zone","locationName","path","arrowRef","contacts","friends","resources","name","isRegisterInProcess","chatrooms","host","leftOpen","rightOpen","socketio","componentDidMount","zoneConnect","zoneId","location","hostedZoneId","hostedZone","onComplete","courseLevel","courseLevels","levels","getLevels","vocabulary","getLevel","modifier","level","toast","success","bodyClassName","hideProgressBar","query","REZONE","rezone","fetchPolicy","GET_LEVELS","courseId","course","GET_LEVEL","levelId","message","replace","trim","indexOf","warn","onLeaveZone","onLeaveSuccess","zoneDisconnect","getZones","handleArrowRef","node","openModal","register","onRegisterResponse","sejState","renderUserSelectionOrRedirect","renderUserSelection","Redirect","to","handleDrawerLeftOpen","handleDrawerLeftClose","handleDrawerRightOpen","handleDrawerRightClose","rootZone","direction","cb","createMessage","anchor","classNames","drawer","drawerRightOpen","drawerRightClose","closeArrow","flexWrap","dense","item","index","Fragment","Component","styles","appBar","zIndex","arrow","content","borderStyle","avatar","backdrop","card2","maxWidth","flexDirection","card","maxHeight","cardDescription","lineHeight","overflow","wordBreak","cardGrid","cardMedia","paddingTop","cursor","cardContent","flexGrow","cardTitle","textOverflow","whiteSpace","cardTitle2","cardUsername","zonesDrawer","flexShrink","drawerLeftOpen","transition","transitions","create","easing","sharp","duration","enteringScreen","drawerLeftClose","leavingScreen","overflowX","breakpoints","up","zonesDrawerPaper","drawerPaper","formControl","heading","heroUnit","heroUnitZoneCreate","heroContentZoneCreate","heroContent","heroButtons","marginTop","layout","link","rightDrawerText","down","rootZoneCreate","saveButton","select","selectEmpty","searchField","showMore","bottom","webkitTransform","transform","subHeading","toolbar","mixins","DisplayCount","StyledSpan","Span","display640","gql","GET_ZONES","zoneFragment","ZONE_CREATE_MUTATION","CustomBadge","defaultProps","ZoneLeftDrawer","drawerLeOpen","badgeColor","stat"],"mappings":"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","file":"static/js/48.0341f3e7.chunk.js","sourcesContent":["import React, {PureComponent} from \"react\"\n\nimport {Flex} from \"../../components\"\n\nimport Loadable from \"react-loadable\"\nimport Loading from \"../../components/loaders/layout-loader.js\"\n\nconst GetCarousel = Loadable({\n  loader: () => import(\"../carousel\"),\n  loading: Loading\n})\n\nclass AppContainer extends PureComponent {\n  componentDidMount() {\n    // get app info and load app here\n  }\n\n  render() {\n    return (\n      <Flex minHeight=\"585px\">\n        <GetCarousel />\n      </Flex>\n    )\n  }\n}\n\nexport default AppContainer\n","/* eslint no-debugger: 0 */\n\n/* import cuid from \"cuid\" */\nimport RecordRTC from \"recordrtc\"\nimport React, {PureComponent} from \"react\"\nimport {withRouter} from \"react-router-dom\"\nimport {withApollo} from \"react-apollo\"\n/* import filename from \"../../../../assets/images/play.svg\" */\n/* import schema from \"../../../../core/schema.js\" */\nimport Button from \"@material-ui/core/Button\"\nimport {/* Box */ Can, Flex} from \"../../../../components\"\nimport styled from \"styled-components\"\nimport ceoImg from \"../../../../assets/images/ceo.jpg\"\nimport TextField from \"@material-ui/core/TextField\"\n/* import FloatingActionButton from \"@material-ui/core/Fab\" */\nimport {withStyles} from \"@material-ui/core/styles\"\n/* /1* import KeyboardVoiceIcon from \"@material-ui/icons/KeyboardVoice\" *1/ */\n/* import FiberSmartRecordIcon from \"@material-ui/icons/FiberSmartRecord\" */\nimport List from \"@material-ui/core/List\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\"\nimport Avatar from \"@material-ui/core/Avatar\"\nimport SendIcon from \"@material-ui/icons/Send\"\nimport Typography from \"@material-ui/core/Typography\"\nimport {session} from \"brownies\"\n\nimport {ChatModal} from \"../../../../containers\"\n\nimport {ZONE_DELETE} from \"../../../../graphql/mutations/zone-mutaions.js\"\n/* import Overlay from './Overlay'; */\n\n/* import \"./styles.css\" */\n\nconst ChatWindow = styled.div`\n  position: relative;\n  display: inline-flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  height: 100%;\n  box-sizing: border-box;\n  width: 100%;\n`\n\nconst ChatPanel = styled.div`\n  position: relative;\n  display: inline-flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  max-height: 532px;\n  width: 100%;\n  box-sizing: border-box;\n  z-index: 1;\n`\n\n/* const Header = styled.div` */\n/*   display: flex; */\n/*   align-items: center; */\n/*   justify-content: space-between; */\n/*   margin: 0 20px; */\n/*   z-index: 1; */\n/*   color: #fafafa !important; */\n/*   border-bottom: 1px solid; */\n/* ` */\n\n/* const Title = styled.p` */\n/*   text-align: center; */\n/*   font-size: 24px; */\n/* ` */\n\nconst NoDots = styled.div`\n  hr {\n    visibility: hidden;\n  }\n`\n\nconst InputPanel = styled.div`\n  background-color: #a1a1a1;\n  display: flex;\n  height: 38px;\n  align-items: center;\n  align-self: center;\n  margin: 0 0 20px 10px;\n  width: 90%;\n`\n\nconst Scrollable = styled.div`\n  height: 530px;\n  margin-bottom: 10px;\n  overflow: auto;\n`\n\nconst styles = theme => ({\n  button: {\n    margin: theme.spacing.unit,\n    marginBottom: \"29px\"\n  },\n  leftIcon: {\n    marginRight: theme.spacing.unit\n  },\n  more: {\n    color: \"black\",\n    \"&:hover\": {\n      color: \"black\" // not working\n    }\n  },\n  rightIcon: {\n    marginLeft: theme.spacing.unit\n  },\n  iconSmall: {\n    fontSize: 20\n  }\n  /* outputText: { */\n  /*   fontSize: \"1rem\", */\n  /*   whiteSpace: \"normal\", */\n  /*   wordBreak: \"break-all\", */\n  /*   overflow: \"initial\", */\n  /*   width: \"100%\", */\n  /*   height: \"auto\", */\n  /*   color: \"#3e3e3e\" */\n  /* } */\n})\n\nclass Chat extends PureComponent {\n  constructor(props, context) {\n    super(props, context)\n\n    /* const {chatHistory} = props */\n\n    this.state = {\n      open: false,\n      chatHistory: [],\n      input: \"\",\n      loading: false\n    }\n  }\n\n  componentDidMount() {\n    this.props.newMessage && this.props.newMessage(this.onMsgReceived)\n    this.scrollChatToBottom()\n    var {props} = this\n\t\t// TODO: getUserMedia has been deprecated!!\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n      console.log(\"getUserMedia supported.\")\n      navigator.mediaDevices\n        .getUserMedia({audio: true})\n        // Success callback\n        .then(stream => {\n          const recorder = RecordRTC(stream, {type: \"audio\"})\n          var record = document.querySelector(\".record\")\n          var stop = document.querySelector(\".stop\")\n          var soundClips = document.querySelector(\".sound-clips\")\n          record.onclick = () => {\n            if (soundClips.childNodes.length === 1) {\n              record.disabled = true\n              alert(\n                \"You can only record 1 audio clip at a time.  Delete your audio clip to record another.\"\n              )\n            } else {\n              recorder.startRecording()\n              console.log(\"recorder started\")\n              record.style.background = \"green\"\n              record.style.color = \"black\"\n            }\n          }\n          stop.onclick = () => {\n            var audio = document.createElement(\"audio\")\n            var clipContainer = document.createElement(\"Article\")\n            var deleteButton = document.createElement(\"button\")\n            recorder.stopRecording(audioURL => {\n              audio.src = audioURL\n              /* var recordedBlob = recorder.getBlob() */\n              recorder.getDataURL(dataUrl => {\n                var files = {\n                  audio: {\n                    /* author: props.userReducer.userProfile.username, */\n                    author: \"beano\",\n                    /* room: props.socketReducer.joined_room, */\n                    /* name: \"file\" + fileCounter++ + \".wav\", */\n                    type: \"audio/wav\",\n                    dataUrl\n                  }\n                }\n                // add blob to redux\n                props.actions.loadAudioBlob(files)\n              })\n            })\n            console.log(\"recorder stopped\")\n            record.style.background = \"\"\n            record.style.color = \"\"\n            clipContainer.classList.add(\"clip\")\n            clipContainer.setAttribute(\n              \"style\",\n              \"display: flex; justify-content: center; padding-top: 20px; width: 270px\"\n            )\n            audio.setAttribute(\"controls\", \"\")\n            deleteButton.innerHTML = \"DEL\"\n            clipContainer.appendChild(audio)\n            clipContainer.appendChild(deleteButton)\n            deleteButton.setAttribute(\n              \"style\",\n              \"font-size: 10px; border-radius: 50%; width: 30px; height: 30px; padding: 3px; background: red; outline: none; border-color: transparent; margin: 12px; cursor: pointer;\"\n            )\n            soundClips.appendChild(clipContainer)\n            deleteButton.onclick = e => {\n              var evtTgt = e.target\n              evtTgt.parentNode.parentNode.removeChild(evtTgt.parentNode)\n              record.disabled = false\n            }\n          }\n        })\n        // Error callback\n        .catch(err => {\n          console.log(\"The following gUM error occured: \" + err)\n        })\n    } else {\n      console.log(\"getUserMedia not supported on your browser!\")\n    }\n  }\n\n  componentWillReceiveProps(props) {\n    if (props.newMessage.data) {\n      this.setState({\n        chatHistory: [...this.state.chatHistory, props.receiveMsg.data]\n      })\n    }\n  }\n\n  componentDidUpdate() {\n    this.scrollChatToBottom()\n  }\n\n  componentWillUnmount() {\n    /* this.props.unregisterHandler() */\n  }\n\n  onInput = e => {\n    this.setState({\n      input: e.target.value\n    })\n  }\n\n  onSendMessage = () => {\n    if (!this.state.input) return\n\n    this.props.onSendMessage(this.state.input, err => {\n      if (err) return console.error(err)\n      return this.setState({input: \"\"})\n    })\n\n    /* const audio = this.props.socketReducer.audioBlob */\n\n    // send audio file\n    /* if (audio) { */\n    /*   this.props.actions.addAudio({ */\n    /*     author: audio.audio.author, */\n    /*     dataUrl: audio.audio.dataUrl */\n    /*   }) */\n    /*   this.props.actions.sendAudioBlob(audio) */\n    /* } */\n\n    // TODO: remove the soundclips\n    var soundClips = document.querySelector(\".sound-clips\")\n    if (soundClips.firstChild) {\n      soundClips.removeChild(soundClips.firstChild)\n    }\n\n    // delete the audio\n    /* this.props.actions.deleteAudioBlob() */\n  }\n\n  onMsgReceived = entry => {\n    this.updateChatHistory(entry)\n  }\n\n  handleClickOpen = () => {\n    this.setState({\n      open: true\n    })\n  }\n\n  handleClose = () => {\n    this.setState({\n      open: false\n    })\n  }\n\n  onLeave = async () => {\n    this.setState({\n      loading: true\n    })\n    const result = await this.props.client.mutate({\n      mutation: ZONE_DELETE,\n      variables: {\n        _id: session.zone._id\n      }\n    })\n\n    if (result) {\n      this.setState({\n        loading: false\n      })\n      // push to zone listings\n      this.props.history.push(\"/zones\")\n    }\n  }\n\n  updateChatHistory = entry => {\n    this.setState({chatHistory: this.state.chatHistory.concat(entry)})\n  }\n\n  scrollChatToBottom = () => {\n    this.panel.scrollTo(0, this.panel.scrollHeight)\n  }\n\n  render() {\n    const {user, zone} = session\n    const {classes} = this.props\n    /* const {username} = this.props.user */\n    /* const Msg = ({author, audio, msg}) => ( */\n    /*   <ListItem alignitems=\"center\" display=\"flex\" padding=\"10px 0\"> */\n    /*     <span style={{fontSize: \"1rem\", width: \"200px\"}}>{author}</span>:{\" \"} */\n    /*     {audio ? ( */\n    /*       <audio className=\"msg-audio\" src={audio} controls> */\n    /*         Your browser does not support the */\n    /*         <code>audio</code> element. */\n    /*         <track kind=\"captions\" /> */\n    /*       </audio> */\n    /*     ) : null}{\" \"} */\n    /*     <span style={{fontSize: \"1rem\"}}>{msg}</span> */\n    /*   </ListItem> */\n    /* ) */\n    return (\n      <Flex\n        height=\"100%\"\n        flexdirection=\"row\"\n        justifycontent=\"center\"\n        width=\"100%\"\n        minwidth=\"320px\">\n        <ChatWindow>\n          <div\n            style={{\n              position: \"absolute\",\n              left: \"15px\",\n              minWidth: \"250px\",\n              top: \"25px\"\n            }}>\n            <Typography className={classes.outputText}>\n              ({this.props.usersList.length}) {this.props.zone.zoneName}\n            </Typography>\n          </div>\n          <Flex justifycontent=\"center\">\n            <Can\n              roles={user && user.roles}\n              perform=\"zone:delete\"\n              id={user && user.username}\n              matchingID={zone.owner.username}\n              yes={() => (\n                <Flex\n                  padding=\"17px 0 0 0\"\n                  alignItems=\"center\"\n                  flexdirection=\"row\">\n                  <Flex margin=\"0 0 0 50px\">\n                    <Typography className={classes.outputText}>\n                      {session.zone.zoneName}\n                    </Typography>\n                  </Flex>\n                  <Flex>\n                    <Button onClick={this.handleClickOpen}>\n                      Terminate Zone\n                    </Button>\n                  </Flex>\n                </Flex>\n              )}\n              no={() => (\n                <Typography style={{padding: \"28px\"}}>\n                  {session.zone.zoneName}\n                </Typography>\n              )}\n            />\n            <ChatModal\n              open={this.state.open}\n              handleClose={this.handleClose}\n              loading={this.state.loading}\n              onLeave={this.onLeave}\n            />\n          </Flex>\n          <ChatPanel>\n            <Scrollable\n              ref={panel => {\n                this.panel = panel\n              }}>\n              <List>\n                {this.state.chatHistory.map(({username, msg, event}, i) => [\n                  <NoDots key={i}>\n                    <ListItem\n                      onClick={() => console.log(\"chat icon was clicked!\")}\n                      button\n                      style={{color: \"#fafafa\"}}>\n                      <ListItemAvatar>\n                        <Avatar alt={`Avatar n°${0 + 1}`} src={`${ceoImg}`} />\n                      </ListItemAvatar>\n                      <ListItemText\n                        primary={`${username} ${event || \"\"}`}\n                        secondary={msg && msg}\n                      />\n                      <ListItemSecondaryAction>\n                        <div className={classes.more}>:</div>\n                      </ListItemSecondaryAction>\n                    </ListItem>\n                  </NoDots>\n                ])}\n              </List>\n            </Scrollable>\n            <Flex flexdirection=\"row\">\n              <InputPanel>\n                <TextField\n                  fullWidth\n                  inputProps={{\n                    maxLength: 255\n                  }}\n                  multiline\n                  rows={2}\n                  rowsMax={2}\n                  onChange={this.onInput}\n                  value={this.state.input}\n                  onKeyPress={e =>\n                    e.key === \"Enter\" ? this.onSendMessage() : null\n                  }\n                />\n              </InputPanel>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={this.onSendMessage}\n                className={classes.button}>\n                Send\n                <SendIcon className={classes.rightIcon}>send</SendIcon>\n              </Button>\n            </Flex>\n            <div\n              className=\"sound-clips\"\n              style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\"\n              }}\n            />\n            {/* <Box flexdirection=\"row\" margin=\"20px 0\">\n              <Button variant=\"contained\" className=\"record\" color=\"secondary\">\n                <FiberSmartRecordIcon className={classes.leftIcon} />\n                Rec\n              </Button>\n              <Button\n                className=\"stop\"\n                style={{color: \"black\", marginLeft: \"8px\"}}>\n                stop\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={this.onSendMessage}\n                className={classes.button}>\n                Send\n                <SendIcon className={classes.rightIcon}>send</SendIcon>\n              </Button>\n            </Box> */}\n          </ChatPanel>\n        </ChatWindow>\n      </Flex>\n    )\n  }\n}\n\nexport default withRouter(withApollo(withStyles(styles)(Chat)))\n","import React, {PureComponent} from \"react\"\n\nimport Grid from \"@material-ui/core/Grid\"\n/* import Paper from \"@material-ui/core/Paper\" */\n/* import Typography from \"@material-ui/core/Typography\" */\nimport {withStyles} from \"@material-ui/core/styles\"\n\nconst styles = theme => ({\n  root: {\n    backgroundColor: \"white\",\n    height: \"100%\",\n    minHeight: \"900px\",\n    width: \"100%\"\n  },\n  paper: {\n    textAlign: \"left\",\n    color: theme.palette.text.primary\n  },\n  title: {\n    padding: \"50px\"\n  }\n})\n\nclass Notebook extends PureComponent {\n  render() {\n    const {classes} = this.props\n    return (\n      <div className={classes.root}>\n        <Grid align=\"center\">\n          {/* <Typography align=\"center\" variant=\"h4\" className={classes.title}>\n            Notebook\n          </Typography> */}\n        </Grid>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles, {withTheme: true})(Notebook)\n","import React, {Component} from \"react\"\nimport {Redirect} from \"react-router-dom\"\nimport {withApollo} from \"react-apollo\"\nimport {toast} from \"react-toastify\"\n\nimport {withStyles} from \"@material-ui/core/styles\"\n/* import Grid from \"@material-ui/core/Grid\" */\n\nimport socketio from \"../../../services/socketio/socketio-mgr.js\"\nimport AppContainer from \"../../../apps/app-container\"\n/* import Badge from \"@material-ui/core/Badge\" */\n/* import Button from \"@material-ui/core/Button\" */\nimport Avatar from \"@material-ui/core/Avatar\"\nimport Chat from \"./chat/chat.js\"\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\"\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\"\nimport classNames from \"classnames\"\nimport Drawer from \"@material-ui/core/Drawer\"\nimport List from \"@material-ui/core/List\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\"\n/* import ListItemIcon from \"@material-ui/core/ListItemIcon\" */\n/* import ListItemText from \"@material-ui/core/ListItemText\" */\n/* import InboxIcon from \"@material-ui/icons/MoveToInbox\" */\nimport Divider from \"@material-ui/core/Divider\"\nimport IconButton from \"@material-ui/core/IconButton\"\n/* import MailIcon from \"@material-ui/icons/Mail\" */\n/* import PeopleIcon from \"@material-ui/icons/People\" */\nimport PersonIcon from \"@material-ui/icons/Person\"\nimport {Flex, Spacer, ZoneMembersTooltip} from \"../../../components\"\n/* import Members from \"./members/members.js\" */\nimport Notebook from \"./notebook/notebook.js\"\nimport {session} from \"brownies\"\nimport ZoneLeftDrawer from \"./zone-left-drawer.js\"\n\nimport {GET_LEVELS, GET_LEVEL} from \"../../../graphql/queries/level-queries.js\"\nimport {REZONE} from \"../../../graphql/queries/zone-queries.js\"\nimport {styles} from \"../styles.js\"\n/* import {CustomBadge} from \"../components/custom-badge.js\" */\n\nconst Loader = () => <div>Loading...</div>\n\nclass Zone extends Component {\n  locationName = this.props.path\n\n  state = {\n    arrowRef: null,\n    contacts: [],\n    friends: session.friends,\n    resources: \"\",\n    receiveMsg: \"\",\n    user: {name: \"beef\"},\n    usersList: [],\n    isRegisterInProcess: false,\n    chatrooms: null,\n    host: false,\n    open: false,\n    leftOpen: true,\n    rightOpen: false,\n    socketio\n  }\n\n  componentDidMount = async () => {\n    // Creates a userzone and receives online stat of all contacts\n    /* const userData = { */\n    /*   username: session.user.username, */\n    /*   _id: session.user._id, */\n    /*   stat: \"online\" */\n    /* } */\n\n    // TODO: if user already in zone, can't reenter\n    /* this.state.socketio.getUser */\n\n    // socketize zone\n    socketio.zoneConnect({\n      username: session.user && session.user.username,\n      zoneId: this.props.history.location.state.zoneId,\n      zoneName: this.props.history.location.state.zoneName\n    })\n\n    const {zoneId} = this.props.history.location.state\n    this.state.socketio.usersList(usersList => {\n      this.setState({\n        usersList\n      })\n    })\n\n    // rehydrate levels and vocabulary for returning hosts\n    const hostedZoneId = session.user.hostedZone && session.user.hostedZone._id\n    if (zoneId === hostedZoneId || session.zone._id === hostedZoneId) {\n      this.setState(\n        {\n          host: true\n        },\n        async () => {\n          if (this.state.host) {\n            const onComplete = (zone, courseLevel, courseLevels) => {\n              session.levels = courseLevels.data.getLevels.levels\n              session.vocabulary = courseLevel.data.getLevel.vocabulary\n              session.modifier =\n                courseLevels.data.getLevels.levels[session.level - 1].modifier\n\n              toast.success(\"You have successfully reconnected to your zone.\", {\n                className: \"toasty\",\n                bodyClassName: \"toasty-body\",\n                hideProgressBar: true\n              })\n            }\n\n            try {\n              const zone = await this.props.client.query({\n                query: REZONE,\n                variables: {\n                  username: session.user.username\n                }\n              })\n\n              // rehydrate zone\n              session.zone = zone.data.rezone\n              session.level = zone.data.rezone.courseLevel\n\n              // if zone is legit\n              if (zone) {\n                const courseLevels = await this.props.client.query({\n                  fetchPolicy: \"network-only\",\n                  query: GET_LEVELS,\n                  variables: {\n                    courseId: zone.data.rezone.course._id\n                  }\n                })\n\n                const courseLevel = await this.props.client.query({\n                  query: GET_LEVEL,\n                  variables: {\n                    levelId:\n                      courseLevels.data.getLevels.levels[session.level - 1]._id\n                  }\n                })\n\n                onComplete(zone, courseLevel, courseLevels)\n              }\n            } catch (err) {\n              /* console.error(\"TEST ERR =>\", err.graphQLErrors.map(x => x.message)); */\n              const msg = err.message.replace(\"GraphQL error:\", \"\").trim()\n              if (err.message.indexOf(\"You can only host\") !== -1) {\n                toast.warn(msg, {\n                  className: \"toasty\",\n                  bodyClassName: \"toasty-body\",\n                  hideProgressBar: true\n                })\n              }\n            }\n          }\n        }\n      )\n    }\n  }\n\n  componentWillUnmount() {\n    alert(\"You are leaving the zone\")\n    this.onLeaveZone(() => this.props.history.push(\"/zones\"))\n  }\n\n  onLeaveZone = onLeaveSuccess => {\n    socketio.zoneDisconnect({\n      username: session.user.username,\n      zoneId: session.zone._id,\n      zoneName: session.zone.zoneName\n    })\n    onLeaveSuccess()\n    /* this.state.socketio.leave(zoneId, err => { */\n    /*   if (err) return console.error(err) */\n    /*   return onLeaveSuccess() */\n    /* }) */\n    // TODO notify remaining occupants that host has left the zone.\n  }\n\n  getZones = () => {\n    this.state.client.getZones((err, chatrooms) => {\n      this.setState({chatrooms})\n    })\n  }\n\n  handleArrowRef = node => {\n    this.setState({\n      arrowRef: node\n    })\n  }\n\n  handleClose = () => {\n    this.setState({\n      open: false\n    })\n  }\n\n  openModal = () => {\n    this.setState({\n      open: true\n    })\n  }\n\n  register = name => {\n    const onRegisterResponse = user =>\n      this.sejState({isRegisterInProcess: false, user})\n    this.setState({isRegisterInProcess: true})\n    this.state.socketio.register(name, (err, user) => {\n      if (err) return onRegisterResponse(null)\n      return onRegisterResponse(user)\n    })\n  }\n\n  renderUserSelectionOrRedirect = renderUserSelection => {\n    if (this.state.user) {\n      return <Redirect to=\"/\" />\n    }\n\n    return this.state.isRegisterInProcess ? <Loader /> : renderUserSelection()\n  }\n\n  handleDrawerLeftOpen = () => {\n    this.setState({leftOpen: true})\n  }\n\n  handleDrawerLeftClose = () => {\n    this.setState({leftOpen: false})\n  }\n\n  handleDrawerRightOpen = () => {\n    this.setState({rightOpen: true})\n  }\n\n  handleDrawerRightClose = () => {\n    this.setState({rightOpen: false})\n  }\n\n  render() {\n    const {classes} = this.props\n    const {zone} = session\n    const {username} = (session && session.user) || {username: \"\"}\n    /* const {chatHistory} = history.location.state */\n    /* this.state.socketio.connected(zone) */\n    return (\n      <Flex className={classes.rootZone}>\n        <ZoneLeftDrawer contacts={this.state.contacts} />\n        {/* <Drawer\n          variant=\"permanent\"\n          className={classNames(classes.drawer, {\n            [classes.drawerLeOpen]: this.state.leftOpen,\n            [classes.drawerLeftClose]: !this.state.leftOpen\n          })}\n          classes={{\n            paper: classNames({\n              [classes.drawerLeOpen]: this.state.leftOpen,\n              [classes.drawerLeftClose]: !this.state.leftOpen\n            })\n          }}\n          open={this.state.open}>\n          <div>\n            <Spacer margin=\"64px 0 0 0\" />\n            {!this.state.leftOpen ? (\n              <IconButton\n                className={classes.closeArrow}\n                onClick={this.handleDrawerLeftOpen}>\n                <ChevronRightIcon />\n              </IconButton>\n            ) : (\n              <IconButton\n                className={classes.closeArrow}\n                onClick={this.handleDrawerLeftClose}>\n                <ChevronLeftIcon />\n              </IconButton>\n            )}\n          </div>\n          <Divider />\n          <List>\n            <ListItem key=\"self\">\n              <CustomBadge background=\"e3e3e3\" />\n              <Avatar\n                alt={`Avatar n°${0 + 1}`}\n                classes={{root: classes.avatar}}\n                src={\n                  session.user.avatar === \"default.png\"\n                    ? null\n                    : session.user.avatar\n                }>\n                <PersonIcon />\n              </Avatar>\n              <ListItemText primary={session.user && session.user.username} />\n            </ListItem>\n          </List>\n          <List>\n            {[\"Contacts\"].map((item, index) => (\n              <ListItem button key={item}>\n                <ListItemIcon>\n                  {index % 2 === 0 ? <PeopleIcon /> : <InboxIcon />}\n                </ListItemIcon>\n                <ListItemText primary={item} />\n              </ListItem>\n            ))}\n          </List>\n          <List>\n            {this.state.contacts.map((item, i) => {\n              var badgeColor = \"#e3e3e3\"\n              if (item.username) {\n                switch (item.stat) {\n                  case \"online\":\n                    badgeColor = \"lime\"\n                    break\n                  case \"offline\":\n                    badgeColor = \"#e3e3e3\"\n                    break\n                  default:\n                    badgeColor = \"#e3e3e3\"\n                }\n              }\n              return (\n                <ListItem button key={i}>\n                  <CustomBadge background={badgeColor} />\n                  <Avatar\n                    alt={`Avatar n°${0 + 1}`}\n                    classes={{root: classes.avatar}}>\n                    <PersonIcon />\n                  </Avatar>\n                  <ListItemText primary={item && item.username} />\n                </ListItem>\n              )\n            })}\n          </List>\n          <Divider />\n        </Drawer> */}\n        <Flex direction=\"column\">\n          <AppContainer />\n          {/* <Members usersList={this.state.usersList} /> */}\n        </Flex>\n        <Flex\n          style={{\n            background: \"LightGray\"\n          }}>\n          <Chat\n            host={this.state.host}\n            onLeave={() =>\n              this.onLeaveZone(zone._id, () => history.push(\"/zones\"))\n            }\n            user={this.state.user}\n            onSendMessage={(message, cb) =>\n              this.state.socketio.createMessage({\n                username,\n                zoneId: zone._id,\n                message,\n                cb\n              })\n            }\n            newMessage={this.state.socketio.newMessage}\n            zone=\"changeme\"\n            usersList={this.state.usersList}\n          />\n          <Notebook />\n        </Flex>\n        {/* Right Drawer */}\n        <Drawer\n          anchor=\"right\"\n          variant=\"permanent\"\n          className={classNames(classes.drawer, {\n            [classes.drawerRightOpen]: this.state.rightOpen,\n            [classes.drawerRightClose]: !this.state.rightOpen\n          })}\n          classes={{\n            paper: classNames({\n              [classes.drawerRightOpen]: this.state.rightOpen,\n              [classes.drawerRightClose]: !this.state.rightOpen\n            })\n          }}\n          open={this.state.rightOpen}>\n          <div>\n            <Spacer margin=\"64px 0 0 0\" />\n            {!this.state.rightOpen ? (\n              <IconButton\n                className={classes.closeArrow}\n                onClick={this.handleDrawerRightOpen}>\n                <ChevronLeftIcon />\n              </IconButton>\n            ) : (\n              <IconButton\n                className={classes.closeArrow}\n                onClick={this.handleDrawerRightClose}>\n                <ChevronRightIcon />\n              </IconButton>\n            )}\n          </div>\n          <Divider />\n          <List\n            style={{\n              alignItems: \"flex-start\",\n              display: \"flex\",\n              flexWrap: \"wrap\"\n            }}\n            dense={true}>\n            {this.state.usersList.map((item, index) => (\n              <React.Fragment key={item}>\n                <ZoneMembersTooltip\n                  username={item}\n                  socketio={this.state.socketio}>\n                  <ListItem\n                    button\n                    style={{\n                      color: \"#fafafa\",\n                      padding: \"10px\",\n                      width: \"56px\"\n                    }}\n                    key={index}>\n                    <ListItemAvatar>\n                      <Avatar alt={`Avatar n°${0 + 1}`}>\n                        <PersonIcon />\n                      </Avatar>\n                    </ListItemAvatar>\n                  </ListItem>\n                </ZoneMembersTooltip>\n              </React.Fragment>\n            ))}\n          </List>\n        </Drawer>\n      </Flex>\n    )\n  }\n}\n\nexport default withStyles(styles, {withTheme: true})(withApollo(Zone))\n","import styled from \"styled-components\"\nimport {Span} from \"../../components\"\n\nconst drawerWidth = 172\nconst zonesDrawerWidth = 240\nconst leftdrawerWidth = 172\nconst rightdrawerWidth = 172\n\n/* const arrowGenerator = color => { */\n/*   return { */\n/*     '&[x-placement*=\"bottom\"] $arrow': { */\n/*       top: 0, */\n/*       left: 0, */\n/*       marginTop: \"-0.95em\", */\n/*       width: \"3em\", */\n/*       height: \"1em\", */\n/*       \"&::before\": { */\n/*         borderWidth: \"0 1em 1em 1em\", */\n/*         borderColor: `transparent transparent ${color} transparent` */\n/*       } */\n/*     }, */\n/*     '&[x-placement*=\"top\"] $arrow': { */\n/*       bottom: 0, */\n/*       left: 0, */\n/*       marginBottom: \"-0.95em\", */\n/*       width: \"3em\", */\n/*       height: \"1em\", */\n/*       \"&::before\": { */\n/*         borderWidth: \"1em 1em 0 1em\", */\n/*         borderColor: `${color} transparent transparent transparent` */\n/*       } */\n/*     }, */\n/*     '&[x-placement*=\"right\"] $arrow': { */\n/*       left: 0, */\n/*       marginLeft: \"-0.95em\", */\n/*       height: \"3em\", */\n/*       width: \"1em\", */\n/*       \"&::before\": { */\n/*         borderWidth: \"1em 1em 1em 0\", */\n/*         borderColor: `transparent ${color} transparent transparent` */\n/*       } */\n/*     }, */\n/*     '&[x-placement*=\"left\"] $arrow': { */\n/*       right: 0, */\n/*       marginRight: \"-0.95em\", */\n/*       height: \"3em\", */\n/*       width: \"1em\", */\n/*       \"&::before\": { */\n/*         borderWidth: \"1em 0 1em 1em\", */\n/*         borderColor: `transparent transparent transparent ${color}` */\n/*       } */\n/*     } */\n/*   } */\n/* } */\n\nexport const styles = theme => ({\n  actions: {\n    display: \"flex\",\n    justifyContent: \"flex-end\"\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1\n  },\n  arrow: {\n    position: \"absolute\",\n    fontSize: 6,\n    width: \"3em\",\n    height: \"3em\",\n    \"&::before\": {\n      content: '\"\"',\n      margin: \"auto\",\n      display: \"block\",\n      width: 0,\n      height: 0,\n      borderStyle: \"solid\"\n    }\n  },\n  avatar: {\n    width: \"28px\",\n    height: \"28px\"\n  },\n  backdrop: {\n    backgroundColor: \"green\"\n  },\n  card2: {\n    height: \"370px\",\n    maxWidth: \"300px\",\n    minWidth: \"200px\",\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  card: {\n    backgroundColor: \"red\",\n    minHeight: \"240px\",\n    maxHeight: \"240px\",\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  cardDescription: {\n    height: \"70px\",\n    lineHeight: \"1em\",\n    overflow: \"auto\",\n    wordBreak: \"break-all\"\n  },\n  cardGrid: {\n    padding: `${theme.spacing.unit * 8}px 0`,\n    width: \"100% !important\"\n  },\n  cardMedia: {\n    paddingTop: \"56.25%\", // 16:9\n    \"&:hover\": {\n      cursor: \"pointer\"\n    }\n  },\n  cardContent: {\n    padding: theme.spacing.unit * 3,\n    flexGrow: 1,\n    width: \"100%\"\n  },\n  cardTitle: {\n    height: \"54px\",\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    whiteSpace: \"nowrap\"\n  },\n  cardTitle2: {\n    height: \"52px\",\n    lineHeight: \"1.2em\",\n    overflow: \"hidden\",\n    wordBreak: \"break-word\"\n  },\n  cardUsername: {\n    whiteSpace: \"nowrap\",\n    width: \"200px\",\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\"\n  },\n  closeArrow: {\n    display: \"flex\",\n    margin: \"0 auto\"\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n    width: \"100%\"\n  },\n  zonesDrawer: {\n    width: zonesDrawerWidth,\n    flexShrink: 0\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerLeftOpen: {\n    width: leftdrawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerLeftClose: {\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    overflowX: \"hidden\",\n    width: theme.spacing.unit * 7 + 1,\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing.unit * 7 + 1\n    }\n  },\n  drawerRightOpen: {\n    width: rightdrawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerRightClose: {\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    overflowX: \"hidden\",\n    width: theme.spacing.unit * 7 + 1,\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing.unit * 7 + 1\n    }\n  },\n  zonesDrawerPaper: {\n    width: zonesDrawerWidth\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    minWidth: 120\n  },\n  heading: {\n    color: \"white\"\n  },\n  heroUnit: {\n    backgroundColor: theme.palette.background.paper\n  },\n  heroUnitZoneCreate: {\n    backgroundColor: \"#502bae\"\n  },\n  heroContentZoneCreate: {\n    maxWidth: 960,\n    margin: \"0 auto\",\n    padding: `${theme.spacing.unit * 8}px ${theme.spacing.unit * 6}px ${theme\n      .spacing.unit * 6}px`\n  },\n  heroContent: {\n    margin: \"0 auto\",\n    padding: `${theme.spacing.unit * 8}px 0 ${theme.spacing.unit * 6}px`\n  },\n  heroButtons: {\n    marginTop: theme.spacing.unit * 4\n  },\n  layout: {\n    width: \"auto\",\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(1240 + theme.spacing.unit * 3 * 2)]: {\n      width: 1240,\n      marginLeft: \"auto\",\n      marginRight: \"auto\"\n    }\n  },\n  link: {\n    fontSize: \"1.3em\",\n    margin: \"20px\"\n  },\n  rightDrawerText: {\n    paddingTop: \"10px\"\n  },\n  root: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"flex-start\",\n    flexGrow: 1,\n    width: \"100%\"\n  },\n  rootZone: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"flex-start\",\n    flexGrow: 1,\n    width: \"100%\",\n    [theme.breakpoints.down(1024 + theme.spacing.unit * 3 * 2)]: {\n      flexDirection: \"column\"\n    }\n  },\n  rootZoneCreate: {\n    maxWidth: 960,\n    margin: \"0 auto\"\n  },\n  saveButton: {\n    margin: \"50px\"\n  },\n  select: {\n    width: \"80% !important\",\n    margin: \"10px auto !important\"\n  },\n  selectEmpty: {\n    marginTop: theme.spacing.unit * 2\n  },\n  searchField: {\n    marginTop: \"7px\"\n  },\n  showMore: {\n    position: \"absolute\",\n    bottom: -50,\n    left: \"50%\",\n    webkitTransform: \"translateX(-50%)\",\n    transform: \"translateX(-50%)\",\n    whiteSpace: \"nowrap\"\n  },\n  subHeading: {\n    color: \"black\",\n    marginTop: \"40px\",\n    position: \"relative\"\n  },\n  toolbar: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar\n  }\n})\n\nexport const DisplayCount = styled.div`\n  font-size: 0.8rem;\n  position: absolute;\n  right: 2%;\n  top: 6px;\n\n  @media (min-width: 330px) {\n    right: 10%;\n  }\n\n  @media (min-width: 640px) {\n    right: 2%;\n  }\n\n  @media (min-width: 740px) {\n    right: 10%;\n  }\n`\n\nexport const StyledSpan = styled(Span)`\n  display: none;\n  font-size: 0.6rem;\n  padding: 0 0 0 10px;\n\n  @media (min-width: 640px) {\n    display: ${props => props.display640};\n  }\n`\n","import gql from \"graphql-tag\"\n\nexport const GET_LEVEL = gql`\n  query getLevel($levelId: String!) {\n    getLevel(levelId: $levelId) {\n      _id\n      course\n      title\n      modifier\n      vocabulary {\n        _id\n        audioUrl\n        level\n        gender\n        keyword\n        partsOfSpeech\n        word\n        translation\n      }\n    }\n  }\n`\n\nexport const GET_LEVELS = gql`\n  query getLevels($courseId: String!) {\n    getLevels(courseId: $courseId) {\n      levels {\n        _id\n        course\n        title\n        modifier\n      }\n    }\n  }\n`\n","import gql from \"graphql-tag\"\n\nexport const GET_ZONES = gql`\n  query getZones(\n    $app: String\n    $subscriptions: String\n    $page: Int\n    $searchInput: String\n    $selectionBox: String\n    $teachingLang: String!\n    $usingLang: String!\n  ) {\n    getZones(\n      input: {\n        app: $app\n        subscriptions: $subscriptions\n        page: $page\n        searchInput: $searchInput\n        selectionBox: $selectionBox\n        teachingLang: $teachingLang\n        usingLang: $usingLang\n      }\n    ) {\n      page\n      more\n      zones {\n        maxMembers\n        members\n        ageGroup\n        app\n        course {\n          _id\n          title\n        }\n        courseLevel\n        _id\n        owner {\n          _id\n          username\n        }\n        ownerCourse {\n          _id\n          username\n        }\n        teachingLang\n        usingLang\n        zoneDescription\n        zoneImage\n        zoneName\n      }\n    }\n  }\n`\nexport const REZONE = gql`\n  query rezone($username: String) {\n    rezone(username: $username) {\n      _id\n      app\n      course {\n        _id\n      }\n      courseLevel\n      ageGroup\n      zoneName\n      zoneDescription\n      owner {\n        username\n      }\n      password\n      private\n      teachingLang\n      usingLang\n    }\n  }\n`\n","import gql from \"graphql-tag\"\n\nexport const zoneFragment = gql`\n  fragment ZoneInfo on Zone {\n    _id\n    app\n    course {\n      _id\n    }\n    courseLevel\n    ageGroup\n    zoneName\n    zoneDescription\n    owner {\n      username\n    }\n    password\n    private\n    teachingLang\n    usingLang\n    zoneName\n  }\n`\n","import gql from \"graphql-tag\"\nimport {zoneFragment} from \"../fragments/zone-fragments.js\"\n\nexport const ZONE_CREATE_MUTATION = gql`\n  mutation zoneCreate(\n    $ageGroup: String!\n    $app: String\n    $course: String\n    $courseLevel: String\n    $owner: String!\n    $private: Boolean\n    $password: String\n    $zoneName: String!\n    $zoneDescription: String\n    $teachingLang: String\n    $usingLang: String\n  ) {\n    zoneCreate(\n      input: {\n        ageGroup: $ageGroup\n        app: $app\n        course: $course\n        courseLevel: $courseLevel\n        owner: $owner\n        private: $private\n        password: $password\n        zoneName: $zoneName\n        zoneDescription: $zoneDescription\n        teachingLang: $teachingLang\n        usingLang: $usingLang\n      }\n    ) {\n      ...ZoneInfo\n    }\n  }\n  ${zoneFragment}\n`\n\nexport const ZONE_DELETE = gql`\n  mutation zoneDelete($_id: String!) {\n    zoneDelete(_id: $_id)\n  }\n`\n","import styled from \"styled-components\"\n\nexport const CustomBadge = styled.div`\n  background-color: ${props => props.background};\n  top: 10px;\n  left: 25px;\n  height: 13px;\n  display: flex;\n  padding: 0 4px;\n  z-index: 1;\n  position: absolute;\n  flex-wrap: wrap;\n  font-size: 0.75rem;\n  min-width: 13px;\n  transform: scale(1) translate(50%, -50%);\n  box-sizing: border-box;\n  transition: transform 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n  align-items: center;\n  font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\n  font-weight: 500;\n  align-content: center;\n  border-radius: 10px;\n  flex-direction: row;\n  justify-content: center;\n  transform-origin: 100% 0%;\n`\nCustomBadge.defaultProps = {\n  background: \"#e3e3e3\"\n}\n","import React, {PureComponent} from \"react\"\nimport Drawer from \"@material-ui/core/Drawer\"\nimport classNames from \"classnames\"\nimport {withStyles} from \"@material-ui/core/styles\"\n\nimport Avatar from \"@material-ui/core/Avatar\"\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\"\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\"\nimport Divider from \"@material-ui/core/Divider\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\"\nimport List from \"@material-ui/core/List\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nimport PeopleIcon from \"@material-ui/icons/People\"\nimport PersonIcon from \"@material-ui/icons/Person\"\nimport {CustomBadge} from \"../components/custom-badge.js\"\n/* import {session} from \"brownies\" */\nimport {styles} from \"../styles.js\"\n\nimport {Spacer} from \"../../../components\"\n\nclass ZoneLeftDrawer extends PureComponent {\n  state = {\n    contacts: [],\n    friends: [],\n    leftOpen: false,\n    open: false\n  }\n\n  handleDrawerLeftOpen = () => {\n    this.setState({\n      leftOpen: true\n    })\n  }\n\n  handleDrawerLeftClose = () => {\n    this.setState({\n      leftOpen: false\n    })\n  }\n\n  render() {\n    const {classes} = this.props\n    return (\n      <Drawer\n        variant=\"permanent\"\n        className={classNames(classes.drawer, {\n          [classes.drawerLeOpen]: this.state.leftOpen,\n          [classes.drawerLeftClose]: !this.state.leftOpen\n        })}\n        classes={{\n          paper: classNames({\n            [classes.drawerLeOpen]: this.state.leftOpen,\n            [classes.drawerLeftClose]: !this.state.leftOpen\n          })\n        }}\n        open={this.state.open}>\n        <div>\n          <Spacer margin=\"64px 0 0 0\" />\n          {!this.state.leftOpen ? (\n            <IconButton\n              className={classes.closeArrow}\n              onClick={this.handleDrawerLeftOpen}>\n              <ChevronRightIcon />\n            </IconButton>\n          ) : (\n            <IconButton\n              className={classes.closeArrow}\n              onClick={this.handleDrawerLeftClose}>\n              <ChevronLeftIcon />\n            </IconButton>\n          )}\n        </div>\n        <Divider />\n        <List>\n          {/* TODO: change personal online stat \n          <ListItem key=\"self\">\n            <CustomBadge background=\"e3e3e3\" />\n            <Avatar\n              alt={`Avatar n°${0 + 1}`}\n              classes={{root: classes.avatar}}\n              src={\n                session.user.avatar === \"default.png\"\n                  ? null\n                  : session.user.avatar\n              }>\n              <PersonIcon />\n            </Avatar>\n            <ListItemText primary={session.user && session.user.username} />\n          </ListItem> */}\n        </List>\n        <List>\n          {[\"Contacts\"].map((item, index) => (\n            <ListItem button key={item}>\n              <ListItemIcon>\n                {index % 2 === 0 ? <PeopleIcon /> : <InboxIcon />}\n              </ListItemIcon>\n              <ListItemText primary={item} />\n            </ListItem>\n          ))}\n        </List>\n        <List>\n          {this.props.contacts.map((item, i) => {\n            var badgeColor = \"#e3e3e3\"\n            if (item.username) {\n              switch (item.stat) {\n                case \"online\":\n                  badgeColor = \"lime\"\n                  break\n                case \"offline\":\n                  badgeColor = \"#e3e3e3\"\n                  break\n                default:\n                  badgeColor = \"#e3e3e3\"\n              }\n            }\n            return (\n              <ListItem button key={i}>\n                <CustomBadge background={badgeColor} />\n                <Avatar\n                  alt={`Avatar n°${0 + 1}`}\n                  classes={{root: classes.avatar}}>\n                  <PersonIcon />\n                </Avatar>\n                <ListItemText primary={item && item.username} />\n              </ListItem>\n            )\n          })}\n        </List>\n        <Divider />\n      </Drawer>\n    )\n  }\n}\n\nexport default withStyles(styles)(ZoneLeftDrawer)\n"],"sourceRoot":""}