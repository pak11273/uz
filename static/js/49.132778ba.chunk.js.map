{"version":3,"sources":["services/photos/photo-abstract.js","utils/shuffle-array.js","services/photos/pixabay.js","services/photos/adapter.js","data/voice-languages.js","apps/carousel/index.js","utils/auth.js","apps/carousel/styles.js"],"names":["PhotoAbstract","TypeError","arr","map","x","word","shuffleArray","partsOfSpeech","i","length","j","Math","floor","random","Pixabay","data","loading","keys","process","PIXABAY_API_KEYS","keyCount","split","this","words","convertData","vocabulary","dataItem","a","keyword","translation","Promise","resolve","modifier","setTimeout","url","encodeURIComponent","fetch","response","json","fetched","imageUrls","hits","item","all","urls","PhotoAdapter","pixabayService","functions","method","fetchPics","voiceLanguages","voiceCode","lang","label","RandomCard","state","expanded","Utter","toggleTranslate","console","log","props","audioUrl","Audio","play","setState","classes","phrase","question","webformatURL","media","className","image","title","randomCard","avatar","aria-label","session","level","subheader","style","display","flexDirection","justifycontent","onClick","PureComponent","HostControls","user","resource","resetOwner","isOwner","shufflePics","count","newCarousel","carousel","shuffledCarousel","randomVocabulary","zone","_id","owner","username","then","res","width","infiniteLoop","onChange","showThumbs","showIndicators","showArrows","showStatus","speak","swipeable","loadingCard","flexdirection","gutterBottom","variant","key","CarouselContainer","voices","componentDidMount","window","speechSynthesis","onvoiceschanged","getVoices","teachingLang","toLowerCase","result","filter","voice","msg","SpeechSynthesisUtterance","root","appTitle","component","withStyles","theme","color","padding","actions","backgroundColor","red","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","card","alignItems","justifyContent","margin","maxWidth","minHeight","cardActions","cardContent","flexGrow","cardMedia","paddingTop","cursor","cardTitle","height","minWidth"],"mappings":"uNAEaA,EAAb,WACE,aACE,GADa,qBACT,6CAAeA,EACjB,MAAM,IAAIC,UACR,yDAJR,wDAmBI,MAAM,IAAIA,UACR,+EApBN,mCAaqBC,GACjB,OAAOA,EAAIC,KAAI,SAAAC,GAAC,OAAIA,EAAEC,YAd1B,KCDaC,EAAe,SAAAJ,GAC1B,IAAKA,EACH,MAAO,CAAC,CAACK,cAAe,WAAYF,KAAM,aAE5C,IAAK,IAAIG,EAAIN,EAAIO,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACvC,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADH,EAEnB,CAACN,EAAIQ,GAAIR,EAAIM,IAA/BN,EAAIM,GAFiC,KAE7BN,EAAIQ,GAFyB,KAIzC,OAAOR,GCJIY,EAAb,kDACE,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IACDA,KAAOA,EACZ,EAAKC,SAAU,EACf,EAAKC,KAAOC,sHAAYC,iBACxB,EAAKC,SAAW,EAEhB,EAAKH,KAAOC,sHAAYC,iBAAiBE,MAAM,KAP/B,EADpB,+FAWkBN,GAXlB,yFAYIO,KAAKN,SAAU,EACTO,EAAQvB,EAAcwB,YAAYT,EAAKU,YAE7CnB,EAAaiB,GAfjB,SAiBsBR,EAAKU,WAAWtB,IAAhB,uCAAoB,WAAMuB,GAAN,eAAAC,EAAA,6DAC9BC,EAAUF,EAASE,QAAUF,EAASE,QAAUF,EAASG,YAD3B,kBAE7B,IAAIC,SAAQ,SAAAC,GACAhB,EAAKiB,SACtBC,WAAU,sBAAC,kCAAAN,EAAA,6DACHO,EADG,uCAEP,EAAKjB,KAAK,EAAKG,UAFR,cAGHQ,EAHG,kDAG8CO,mBACrD,KAJO,6BAMcC,MAAMF,GANpB,cAMHG,EANG,gBAOaA,EAASC,OAPtB,OAOHC,EAPG,OASHC,EAAYD,EAAQE,KAAKtC,KAAI,SAAAuC,GACjC,OAAO,eAAIhB,EAAX,GAAwBgB,MAItB,EAAKtB,SAAW,IAAM,EAAKA,SAASX,OAAS,EAC/C,EAAKW,SAEL,EAAKA,SAAW,EAGlBW,EAAQS,GApBC,4CAqBR,SAzB+B,2CAApB,uDAjBtB,cAiBUtC,EAjBV,gBA8CuB4B,QAAQa,IAAIzC,GA9CnC,cA8CU0C,EA9CV,OAgDItB,KAAKN,SAAU,EAhDnB,kBAiDW4B,GAjDX,6GAA6B5C,GCKhB6C,EACX,WAAY9B,GAAO,oBACjB,IAAM+B,EAAiB,IAAIhC,EAAQC,GAGnCO,KAAKyB,UAAY,SAASC,GACxB,GAAe,iBAAXA,EACF,OAAOF,EAAeG,UAAUlC,K,kLCjB3BmC,EAAiB,CAC7B,CAACC,UAAW,QAASC,KAAM,UAAWC,MAAO,UAC7C,CAACF,UAAW,QAASC,KAAM,aAAcC,MAAO,cAChD,CAACF,UAAW,QAASC,KAAM,eAAgBC,MAAO,gBAClD,CAACF,UAAW,QAASC,KAAM,UAAWC,MAAO,qBAC7C,CAACF,UAAW,QAASC,KAAM,WAAYC,MAAO,UAC9C,CAACF,UAAW,QAASC,KAAM,QAASC,MAAO,SAC3C,CAACF,UAAW,QAASC,KAAM,YAAaC,MAAO,cAC/C,CAACF,UAAW,QAASC,KAAM,WAAYC,MAAO,WAC9C,CAACF,UAAW,QAASC,KAAM,WAAYC,MAAO,YAC9C,CAACF,UAAW,QAASC,KAAM,SAAUC,MAAO,UAC5C,CAACF,UAAW,QAASC,KAAM,aAAcC,MAAO,SAChD,CAACF,UAAW,QAASC,KAAM,SAAUC,MAAO,UAC5C,CAACF,UAAW,QAASC,KAAM,mBAAoBC,MAAO,uBACtD,CAACF,UAAW,QAASC,KAAM,UAAWC,MAAO,WAC7C,CAACF,UAAW,QAASC,KAAM,UAAWC,MAAO,Y,iBCsBxCC,G,oNACJC,MAAQ,CACN1B,aAAa,EACb2B,UAAU,EACVC,MAAO,I,EAYTC,gBAAkB,YAChBC,QAAQC,IAAI,UAAW,EAAKC,MAAMC,UAC7B,EAAKD,MAAMC,UAMJ,IAAIC,MAAM,EAAKF,MAAMC,UAC7BE,OALQ,IAAID,MAAM,EAAKF,MAAMC,UAC7BE,OAMJ,EAAKC,SAAS,CACZpC,aAAa,IAEfI,YAAW,WACT,EAAKgC,SAAS,CACZpC,aAAa,MAEd,M,uDAGK,IAAD,EAWHP,KAAKuC,MARPK,EAHK,EAGLA,QACA3D,EAJK,EAILA,cAEAF,EANK,EAMLA,KACA8D,EAPK,EAOLA,OACAC,EARK,EAQLA,SAEAC,EAVK,EAULA,aAGF,GACoB,aAAlB9D,GACkB,UAAlBA,GACkB,cAAlBA,EAEA,IAAI+D,EAAQ,4BAAKjE,QAEjBiE,EACE,kBAAC,IAAD,CACEC,UAAWL,EAAQI,MACnBE,MAAOH,EACPI,MAAM,gBAKZ,OACE,kBAAC,IAAD,CAAMF,UAAWL,EAAQQ,YACvB,kBAAC,IAAD,CACEC,OACE,kBAAC,IAAD,CAAQC,aAAW,QAAQL,UAAWL,EAAQS,QAC3CE,UAAQC,OASbL,MAAOpE,GAAQ8D,GAAUC,EACzBW,UAAWxE,IAEZ+D,EACD,kBAAC,IAAD,KACE,yBACEU,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,eAAgB,WAElB,kBAAC,IAAD,CAAQC,QAAS9D,KAAKoC,iBACnBpC,KAAKiC,MAAM1B,YACVP,KAAKuC,MAAMhC,YAEX,kBAAC,IAAD,c,GA/FSwD,kBA0InBC,E,kDACJ,WAAYzB,GAAQ,IAAD,EChLG0B,EAAMC,EDgLT,4BACjB,cAAM3B,IAuCR4B,WAAa,WACXxD,YACE,kBACE,EAAKgC,SAAS,CACZyB,SAAS,EACT1E,SAAS,MAEb,MA/Ce,EAmDnB2E,YAnDmB,uCAmDL,WAAMC,GAAN,SAAAjE,EAAA,sDACE,IAAViE,GAEF,EAAK3B,SACH,CACEyB,SAAS,EACT1E,SAAS,IAEX,WAEE,IAAM6E,EAAchB,UAAQiB,SAC5BxF,EAAauF,GACb,IAAME,EAAmBF,EAAY1F,KAAI,SAAAuC,GACvC,OAAOpC,EAAaoC,MAEtB,EAAKuB,SAAS,CACZ+B,iBAAkBD,IAEpB,EAAKN,gBAlBC,2CAnDK,sDAGjB,EAAKlC,MAAQ,CACXqC,MAAO,EACP5E,SAAS,EACT0E,SCtLkBH,EDsLDV,UAAQU,KCtLDC,EDsLOX,UAAQoB,KCpLzCV,EAAKW,MAAQV,EAASW,MAAMD,KAAOX,EAAKa,WAAaZ,EAASW,MAAMC,UDqLlEJ,iBAAkBnB,UAAQiB,UAPX,E,gEAWE,IAAD,OAEdxE,KAAKiC,MAAMmC,SAOI,IAAI7C,EAAa,CAChCpB,WAAYoD,UAAQpD,WACpBO,SAAU6C,UAAQ7C,WAGXe,UAAU,gBAAgBsD,MAAK,SAAAC,GACtCzB,UAAQiB,SAAWQ,EAGnB3C,QAAQC,IAAI,QAAS0C,GAErB,EAAKrC,SAAS,CACZ+B,iBAAkBM,EAClBtF,SAAS,EACT0E,SAAS,S,+BAyCP,IAAD,OACP,OACE,kBAAC,WAAD,CACEa,MAAM,QACNC,cAAc,EACdC,SAAU,SAAAb,GAAK,OAAI,EAAKD,YAAYC,IACpCc,YAAY,EACZC,gBAAgB,EAChBC,WAAYtF,KAAKiC,MAAMmC,UAAYpE,KAAKiC,MAAMvC,QAC9C6F,YAAU,EACVC,MAAOxF,KAAKuC,MAAMiD,MAClBC,UAAWzF,KAAKiC,MAAMmC,SACrBpE,KAAKiC,MAAMvC,SACV,kBAAC,IAAD,CAAMuD,UAAWjD,KAAKuC,MAAMK,QAAQ8C,aAClC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMC,cAAc,SAAS9B,eAAe,UAC1C,kBAAC,IAAD,CAAY+B,cAAY,EAACC,QAAQ,MAAjC,oBAGA,kBAAC,IAAD,UAKN7F,KAAKiC,MAAMvC,SACXM,KAAKiC,MAAMyC,iBAAiB7F,KAAI,SAACuC,EAAMlC,GACrC,IAAMN,EAAMI,EAAaoC,GACzB,OACE,yBAAK0E,IAAK5G,GACR,kBAAC,EAAD,iBAAgBN,EAAI,GAAQ,EAAK2D,iB,GAzGtBwB,iBAkHrBgC,E,4MACJ9D,MAAQ,CACN+D,OAAQ,I,EAGVC,kBAAoB,WAClB5D,QAAQC,IAAI,mBAAoB,EAAKC,OAErC2D,OAAOC,gBAAgBC,gBAAvB,sBAAyC,4BAAA/F,EAAA,sEAClB6F,OAAOC,gBAAgBE,YADL,OACjCL,EADiC,OAEvC,EAAKrD,SACH,CACEqD,UAEF3D,QAAQC,IAAI,UAAW,EAAKL,QANS,4C,EAW3CuD,MAAQ,SAAAzG,GACNsD,QAAQC,IAAI,SACZ,IAAMgE,EAAe/C,UAAQoB,KAAK2B,aAAaC,cAEzCC,EAAS5E,EAAe6E,QAAO,SAAArF,GACnC,OAAOA,EAAKW,QAAUuE,KAExBjE,QAAQC,IAAI,WAAYkE,EAAO,GAAG3E,WAClC,IAAM6E,EAAQ,EAAKzE,MAAM+D,OAAOS,QAAO,SAAArF,GACrCA,EAAKU,KAAS0E,EAAO,GAAG3E,aAG1BQ,QAAQC,IAAI,UAAWoE,GAGvB,IAAIC,EAAM,IAAIC,yBAAyB7H,GAOvC4H,EAAI7E,KAAO0E,EAAO,GAAG3E,UAErBqE,OAAOC,gBAAgBX,MAAMmB,I,uDAGrB,IACD/D,EAAW5C,KAAKuC,MAAhBK,QACP,OACE,kBAAC,IAAD,CAAMK,UAAWL,EAAQiE,MACvB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAY5D,UAAWL,EAAQkE,SAAUlB,cAAY,EAACmB,UAAU,KAAhE,aAIF,kBAAC,IAAD,KACE,kBAAC,EAAD,eAAcvB,MAAOxF,KAAKwF,OAAWxF,KAAKuC,MAAWvC,KAAKiC,c,GAxDpC8B,iBA+DjBiD,gCE9VO,SAAAC,GAAK,MAAK,CAC9BH,SAAU,CACRI,MAAO,QACPC,QAAS,iBAEXC,QAAS,CACPzD,QAAS,QAEXN,OAAQ,CACNgE,gBAAiBC,IAAI,MAEvBC,OAAQ,CACNC,UAAW,eACXC,WAAY,OACZC,WAAYT,EAAMU,YAAYC,OAAO,YAAa,CAChDC,SAAUZ,EAAMU,YAAYE,SAASC,YAGzCC,WAAY,CACVP,UAAW,kBAGbQ,KAAM,CACJrE,QAAS,OACTsE,WAAY,SACZC,eAAgB,SAChBC,OAAQ,iBACRC,SAAU,IACVC,UAAW,KAEbC,YAAa,CACX3E,QAAS,OACTuE,eAAgB,UAElBK,YAAa,CACXC,SAAU,GAEZC,UAAW,CAETC,WAAY,SACZ,UAAW,CACTC,OAAQ,YAGZC,UAAW,CACTC,OAAQ,QAEVnD,YAAa,CACX/B,QAAS,OACTsE,WAAY,SACZC,eAAgB,SAChBC,OAAQ,OACRC,SAAU,IACVC,UAAW,KAEbrF,MAAO,CACL6F,OAAQ,EACRH,WAAY,UAEdtF,WAAY,CACV6E,WAAY,SACZC,eAAgB,SAChBC,OAAQ,iBACRC,SAAU,IACVC,UAAW,KAEbxB,KAAM,CACJQ,gBAAiB,UACjBgB,UAAW,IACXS,SAAU,QFyRC9B,CAAmBjB","file":"static/js/49.132778ba.chunk.js","sourcesContent":["/* eslint-disable */\n\nexport class PhotoAbstract {\n  constructor() {\n    if (new.target === PhotoAbstract) {\n      throw new TypeError(\n        \"This is an abstract class and cannot be instantiated.\"\n      )\n    }\n  }\n\n  // parent functions\n  /**\n   *  converts array of Objects to an array of strings(word)\n   */\n  static convertData(arr) {\n    return arr.map(x => x.word)\n  }\n\n  // required functions\n  fetchPics() {\n    throw new TypeError(\n      \"fetchPics cannot be used from the abstract class.  It must be overridden\"\n    )\n  }\n}\n","/* eslint no-plusplus:0 */\nexport const shuffleArray = arr => {\n  if (!arr) {\n    return [{partsOfSpeech: \"alphabet\", word: \"no entry\"}]\n  }\n  for (let i = arr.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1))\n    ;[arr[i], arr[j]] = [arr[j], arr[i]]\n  }\n  return arr\n}\n\n// another version: slightly slower but more readable\nexport const shuffleArray2 = arr => {\n  arr\n    .map(a => ({sort: Math.random(), value: a}))\n    .sort((a, b) => a.sort - b.sort)\n    .map(a => a.value)\n  return arr\n}\n","/* eslint-disable */\nimport {PhotoAbstract} from \"./photo-abstract.js\"\nimport {session} from \"brownies\"\nimport {shuffleArray} from \"../../utils/shuffle-array.js\"\n\nexport class Pixabay extends PhotoAbstract {\n  constructor(data) {\n    super(data)\n    this.data = data\n    this.loading = false\n    this.keys = process.env.PIXABAY_API_KEYS\n    this.keyCount = 0\n\n    this.keys = process.env.PIXABAY_API_KEYS.split(\",\")\n  }\n\n  async fetchPics(data) {\n    this.loading = true\n    const words = PhotoAbstract.convertData(data.vocabulary)\n    // mix up words\n    shuffleArray(words)\n\n    const arr = await data.vocabulary.map(async dataItem => {\n      const keyword = dataItem.keyword ? dataItem.keyword : dataItem.translation\n      return new Promise(resolve => {\n        const modifier = data.modifier || \"\"\n        setTimeout(async () => {\n          const url = `https://pixabay.com/api/?key=${\n            this.keys[this.keyCount]\n          }&q=${keyword}&image_type=photo&pretty=true&per_page=${encodeURIComponent(\n            100\n          )}&safesearch=true`\n          const response = await fetch(url)\n          const fetched = await response.json()\n\n          const imageUrls = fetched.hits.map(item => {\n            return {...dataItem, ...item}\n          })\n\n          // rotate keys TODO: this needs to function on the backend\n          if (this.keyCount + 1 !== this.keyCount.length - 1) {\n            this.keyCount + 1\n          } else {\n            this.keyCount = 0\n          }\n\n          resolve(imageUrls)\n        }, 1000)\n      })\n    })\n\n    const urls = await Promise.all(arr)\n\n    this.loading = false\n    return urls\n  }\n}\n","import {Pixabay} from \"./pixabay.js\"\n\n// TODO: get photos from an array of search terms\n// generate a mapping to that array to another array of image urls\n\n// if service has reached quota, move to the next available service\n// have safe image customization\n// have admin section to view quotas, details\n/* import {Pixabay} from \"./pixabay.js\" */\n\nexport class PhotoAdapter {\n  constructor(data) {\n    const pixabayService = new Pixabay(data)\n    /* const googleService = new Google(data) */\n\n    this.functions = function(method) {\n      if (method === \"fetchPixabay\") {\n        return pixabayService.fetchPics(data)\n      }\n    }\n  }\n\n  /* const Pixa = new Pixabay() */\n}\n","export const voiceLanguages = [\n\t{voiceCode: \"de-DE\", lang: \"deutsch\", label: \"german\"},\n\t{voiceCode: \"en-ES\", lang: \"US english\", label: \"english us\"},\n\t{voiceCode: \"en-GB\", lang: \"UK engislish\", label: \"english (uk)\"},  \n\t{voiceCode: \"es-ES\", lang: \"espanol\", label: \"spanish (mexican)\"},  \n\t{voiceCode: \"fr-FR\", lang: \"francais\", label: \"french\"},  \n\t{voiceCode: \"hi-IN\", lang: \"hindi\", label: \"hindi\"},  \n\t{voiceCode: \"id-ID\", lang: \"indonesia\", label: \"indonesian\"},  \n\t{voiceCode: \"it-IT\", lang: \"italiano\", label: \"italian\"},  \n\t{voiceCode: \"ja-JP\", lang: \"japanese\", label: \"japanese\"},  \n\t{voiceCode: \"ko-KR\", lang: \"korean\", label: \"korean\"},  \n\t{voiceCode: \"nl-NL\", lang: \"Nederlands\", label: \"dutch\"},\n\t{voiceCode: \"pl-PL\", lang: \"polski\", label: \"polish\"},  \n\t{voiceCode: \"pt-BR\", lang: \"portugues brazil\", label: \"portuguese (brazil)\"},  \n\t{voiceCode: \"ru-RU\", lang: \"russian\", label: \"russian\"},  \n\t{voiceCode: \"zh-CN\", lang: \"Chinese\", label: \"chinese\"},  \n]\n","import React, {PureComponent} from \"react\"\nimport {session} from \"brownies\"\nimport {PhotoAdapter} from \"../../services/photos/adapter.js\"\n\nimport CardHeader from \"@material-ui/core/CardHeader\"\n/* import Collapse from \"@material-ui/core/Collapse\" */\nimport Avatar from \"@material-ui/core/Avatar\"\n/* import IconButton from \"@material-ui/core/IconButton\" */\n/* import FavoriteIcon from \"@material-ui/icons/Favorite\" */\n/* import ShareIcon from \"@material-ui/icons/Share\" */\n/* import ExpandMoreIcon from \"@material-ui/icons/ExpandMore\" */\n/* import MoreVertIcon from \"@material-ui/icons/MoreVert\" */\nimport Button from \"@material-ui/core/Button\"\nimport Card from \"@material-ui/core/Card\"\n/* import CardActions from \"@material-ui/core/CardActions\" */\nimport CardContent from \"@material-ui/core/CardContent\"\nimport CardMedia from \"@material-ui/core/CardMedia\"\n/* import ExpansionPanel from \"@material-ui/core/ExpansionPanel\" */\n/* import ExpansionPanelActions from \"@material-ui/core/ExpansionPanelActions\" */\n/* import ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\" */\n/* import Grid from \"@material-ui/core/Grid\" */\n/* import IconButton from \"@material-ui/core/IconButton\" */\nimport PlayCircleOutlineIcon from \"@material-ui/icons/PlayCircleOutline\"\nimport {withStyles} from \"@material-ui/core/styles\"\nimport Typography from \"@material-ui/core/Typography\"\n\nimport \"react-responsive-carousel-v2/dist/carousel.scss\"\nimport {Carousel} from \"react-responsive-carousel-v2\"\nimport {isOwner, shuffleArray} from \"../../utils\"\n/* import {shuffleArray} from \"../../utils\" */\nimport {Flex, LoaderCircle} from \"../../components\"\nimport {voiceLanguages} from \"../../data/voice-languages.js\"\n\n/* import classNames from \"classnames\" */\nimport {styles} from \"./styles.js\"\nimport \"./overrides.css\"\n\nclass RandomCard extends PureComponent {\n  state = {\n    translation: false,\n    expanded: false,\n    Utter: {}\n  }\n\n  /* const handleExpandClick = () => { */\n  /*   console.log(\"web: \", webformatURL) */\n  /*   console.log(\"typeof: \", typeof webformatURL) */\n  /*   changeState({ */\n  /*     ...state, */\n  /*     expanded: !state.expanded */\n  /*   }) */\n  /* } */\n\n  toggleTranslate = () => {\n    console.log(\"audio: \", this.props.audioUrl)\n    if (!this.props.audioUrl) {\n      /* this.props.speak(this.props.word) */\n      const a = new Audio(this.props.audioUrl)\n      a.play()\n    } else {\n      /* this.props.speak(this.props.word) */\n      const a = new Audio(this.props.audioUrl)\n      a.play()\n    }\n    this.setState({\n      translation: true\n    })\n    setTimeout(() => {\n      this.setState({\n        translation: false\n      })\n    }, 10000)\n  }\n\n  render() {\n    const {\n      /* audioUrl, */\n      classes,\n      partsOfSpeech,\n      /* translation, */\n      word,\n      phrase,\n      question,\n      /* speak, */\n      webformatURL\n    } = this.props\n\n    if (\n      partsOfSpeech === \"alphabet\" ||\n      partsOfSpeech === \"vowel\" ||\n      partsOfSpeech === \"consonant\"\n    ) {\n      var media = <h1>{word}</h1>\n    } else {\n      media = (\n        <CardMedia\n          className={classes.media}\n          image={webformatURL}\n          title=\"Paella dish\"\n        />\n      )\n    }\n\n    return (\n      <Card className={classes.randomCard}>\n        <CardHeader\n          avatar={\n            <Avatar aria-label=\"level\" className={classes.avatar}>\n              {session.level}\n            </Avatar>\n          }\n          /*  action={\n          <IconButton onClick={() => alert(\"You don't belong here!\")}>\n            <MoreVertIcon />\n          </IconButton>\n        }\n\t\t\t\t*/\n          title={word || phrase || question}\n          subheader={partsOfSpeech}\n        />\n        {media}\n        <CardContent>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifycontent: \"center\"\n            }}>\n            <Button onClick={this.toggleTranslate}>\n              {this.state.translation ? (\n                this.props.translation\n              ) : (\n                <PlayCircleOutlineIcon />\n              )}\n            </Button>\n          </div>\n        </CardContent>\n        {/*\n      <CardActions className={classes.actions} disableActionSpacing>\n          <IconButton aria-label=\"Add to favorites\">\n\t\t\t\t\t\t\t          <FavoriteIcon />\n\t\t\t\t\t\t\t\t\t\t\t\t        </IconButton>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <IconButton aria-label=\"Share\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t           <ShareIcon />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t         </IconButton> \n        <IconButton\n          className={classNames(classes.expand, {\n            [classes.expandOpen]: state.expanded\n          })}\n          onClick={handleExpandClick}\n          aria-expanded={state.expanded}\n          aria-label=\"Show more\">\n          <ExpandMoreIcon />\n        </IconButton>\n      </CardActions>\n      <Collapse in={state.expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent>\n          <Typography paragraph>Word Study:</Typography>\n          <Typography paragraph>\n            Fusce risus nisl, viverra et, tempor et, pretium in, sapien. Ut\n            varius tincidunt libero. Phasellus blandit leo ut odio. Nullam quis\n            ante. Vivamus elementum semper nisi.\n          </Typography>\n          <Typography paragraph>\n            Fusce risus nisl, viverra et, tempor et, pretium in, sapien. Ut\n            varius tincidunt libero. Phasellus blandit leo ut odio. Nullam quis\n            ante. Vivamus elementum semper nisi.\n          </Typography>\n        </CardContent>\n      </Collapse> */}\n      </Card>\n    )\n  }\n}\n\nclass HostControls extends PureComponent {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      count: 0,\n      loading: true,\n      isOwner: isOwner(session.user, session.zone),\n      randomVocabulary: session.carousel\n    }\n  }\n\n  componentDidMount() {\n    // get app info and load app here\n    if (this.state.isOwner) {\n      // TODO: fetch from server\n\n      /* this.client.query({ */\n      /*   query: GET_CAROUSEL_PICS */\n      /* }) */\n\n      const PAdapter = new PhotoAdapter({\n        vocabulary: session.vocabulary,\n        modifier: session.modifier\n      })\n\n      PAdapter.functions(\"fetchPixabay\").then(res => {\n        session.carousel = res\n        // TODO: send list to all members in room\n        // if new member enters, they must get list too\n        console.log(\"res: \", res)\n\n        this.setState({\n          randomVocabulary: res,\n          loading: false, // set to false when all members are ready\n          isOwner: true\n        })\n      })\n    }\n  }\n\n  resetOwner = () => {\n    setTimeout(\n      () =>\n        this.setState({\n          isOwner: true,\n          loading: false\n        }),\n      3000\n    )\n  }\n\n  shufflePics = async count => {\n    if (count === 0) {\n      // mix cards\n      this.setState(\n        {\n          isOwner: false,\n          loading: true\n        },\n        () => {\n          // shuffle cards\n          const newCarousel = session.carousel\n          shuffleArray(newCarousel)\n          const shuffledCarousel = newCarousel.map(item => {\n            return shuffleArray(item)\n          })\n          this.setState({\n            randomVocabulary: shuffledCarousel\n          })\n          this.resetOwner()\n        }\n      )\n    }\n  }\n\n  render() {\n    return (\n      <Carousel\n        width=\"600px\"\n        infiniteLoop={true}\n        onChange={count => this.shufflePics(count)}\n        showThumbs={false}\n        showIndicators={false}\n        showArrows={this.state.isOwner && !this.state.loading}\n        showStatus\n        speak={this.props.speak}\n        swipeable={this.state.isOwner}>\n        {this.state.loading && (\n          <Card className={this.props.classes.loadingCard}>\n            <CardContent>\n              <Flex flexdirection=\"column\" justifycontent=\"center\">\n                <Typography gutterBottom variant=\"h6\">\n                  Loading Pictures\n                </Typography>\n                <LoaderCircle />\n              </Flex>\n            </CardContent>\n          </Card>\n        )}\n        {!this.state.loading &&\n          this.state.randomVocabulary.map((item, i) => {\n            const arr = shuffleArray(item)\n            return (\n              <div key={i}>\n                <RandomCard {...arr[0]} {...this.props} />\n              </div>\n            )\n          })}\n      </Carousel>\n    )\n  }\n}\n\nclass CarouselContainer extends PureComponent {\n  state = {\n    voices: []\n  }\n\n  componentDidMount = () => {\n    console.log(\"carousel props: \", this.props)\n    // TODO: match usingLang to voiceLanguages, get the index and return the voiceCode\n    window.speechSynthesis.onvoiceschanged = async () => {\n      const voices = await window.speechSynthesis.getVoices()\n      this.setState(\n        {\n          voices\n        },\n        console.log(\"state: \", this.state)\n      )\n    }\n  }\n\n  speak = word => {\n    console.log(\"hello\")\n    const teachingLang = session.zone.teachingLang.toLowerCase()\n    // wait on voices to be loaded before fetching list\n    const result = voiceLanguages.filter(item => {\n      return item.label === teachingLang\n    })\n    console.log(\"result: \", result[0].voiceCode)\n    const voice = this.state.voices.filter(item => {\n      item.lang === result[0].voiceCode\n    })\n\n    console.log(\"voice: \", voice)\n\n    /* var msg = new SpeechSynthesisUtterance(\"foo foo\") */\n    var msg = new SpeechSynthesisUtterance(word)\n    /* msg.rate = 1 */\n    /* msg.pitch = 1 */\n    /* msg.voice = voice */\n\n    /* msg.voice = voices[8] */\n    /* msg.voiceURI = \"native\" */\n    msg.lang = result[0].voiceCode\n\n    window.speechSynthesis.speak(msg)\n  }\n\n  render() {\n    const {classes} = this.props\n    return (\n      <Flex className={classes.root}>\n        <Flex>\n          <Typography className={classes.appTitle} gutterBottom component=\"p\">\n            Carousel\n          </Typography>\n        </Flex>\n        <Flex>\n          <HostControls speak={this.speak} {...this.props} {...this.state} />\n        </Flex>\n      </Flex>\n    )\n  }\n}\n\nexport default withStyles(styles)(CarouselContainer)\n","export const isOwner = (user, resource) => {\n  return (\n    user._id === resource.owner._id || user.username === resource.owner.username\n  )\n}\n\nexport const hasRights = (user, rights) =>\n  rights.some(right => user.rights.includes(right))\n\nexport const hasRole = (user, roles) =>\n  roles.some(role => user.roles.includes(role))\n","import red from \"@material-ui/core/colors/red\"\n\nexport const styles = theme => ({\n  appTitle: {\n    color: \"white\",\n    padding: \"15px 15px 0 0\"\n  },\n  actions: {\n    display: \"flex\"\n  },\n  avatar: {\n    backgroundColor: red[500]\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\"\n  },\n\n  card: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    margin: \"30px auto 30px\",\n    maxWidth: 412,\n    minHeight: 370\n  },\n  cardActions: {\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  cardContent: {\n    flexGrow: 1\n  },\n  cardMedia: {\n    /* paddingTop: \"56.25%\", // 16:9 */\n    paddingTop: \"46.25%\",\n    \"&:hover\": {\n      cursor: \"pointer\"\n    }\n  },\n  cardTitle: {\n    height: \"100%\"\n  },\n  loadingCard: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    margin: \"30px\",\n    maxWidth: 532,\n    minHeight: 370\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\" // 16:9\n  },\n  randomCard: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    margin: \"30px auto 30px\",\n    maxWidth: 412,\n    minHeight: 370\n  },\n  root: {\n    backgroundColor: \"#3e3e3e\",\n    minHeight: 509,\n    minWidth: 320\n  }\n})\n"],"sourceRoot":""}