{"version":3,"sources":["layouts/courses/containers/course-introduction.js","layouts/courses/styles.js"],"names":["CourseIntroduction","state","formErrors","errors","courseId","session","course","_id","courseDescription","name","email","loading","subscribed","submittedName","submittedEmail","title","courseDescriptionError","classNames","errorClass","path","isEmpty","titleError","sessionUnsubscribe","user","updatedSubscriptions","subscriptions","filter","obj","handleSubmit","e","a","preventDefault","courseSchema","validate","catch","err","console","log","setState","yupCheck","props","client","mutate","mutation","COURSE_UPDATE","variables","refetchQueries","query","GET_COURSES","usingLang","teachingLang","updatedCourse","data","courseUpdate","toast","success","className","bodyClassName","hideProgressBar","sessionSubscribe","tempUser","push","componentDidMount","location","Promise","resolve","result","find","o","then","res","bool","this","classes","GET_COURSE","error","container","alignContent","justify","style","height","color","graphQLErrors","map","i","message","fontSize","margin","padding","textAlign","key","onSubmit","charset","content","rel","href","hero","direction","header","elevation","headerBody","variant","align","gutterBottom","spacing","item","xs","display","flexDirection","alignItems","justifyContent","src","courseImage","SUBSCRIBE_MUTATION","onCompleted","disabled","onClick","UNSUBSCRIBE_MUTATION","userId","size","inputHeader","fullWidth","label","onChange","target","value","placeholder","type","multiline","rowsMax","fontWeight","owner","username","resource","roles","perform","id","matchingID","yes","no","PureComponent","compose","withApollo","withStyles","styles","theme","card","minHeight","cardGrid","unit","cardMedia","paddingTop","cursor","cardUsername","whiteSpace","width","overflow","textOverflow","flexGrow","drawer","flexShrink","drawerPaper","editButton","backgroundColor","boxShadow","palette","main","formControl","minWidth","gridActions","gridTitle","lineHeight","wordBreak","heroUnit","heroContent","heroButtons","marginTop","icon","marginRight","background","layout","marginLeft","breakpoints","up","root","selectEmpty","searchField","showMore","position","bottom","left","webkitTransform","transform"],"mappings":"uXA4BMA,E,4MACJC,MAAQ,CACNC,WAAY,CACVC,OAAQ,IAEVC,SAAUC,UAAQC,OAAOC,IACzBC,kBAAmBH,UAAQC,OAAOE,kBAClCC,KAAM,GACNC,MAAO,GACPC,SAAS,EACTC,YAAY,EACZC,cAAe,GACfC,eAAgB,GAChBC,MAAOV,UAAQC,OAAOS,O,EAGxBC,uBAAyBC,IAAW,CAClCC,WACiC,sBAA/B,EAAKjB,MAAMC,WAAWiB,OACrBC,IAAQ,EAAKnB,MAAMC,WAAWC,U,EAGnCkB,WAAaJ,IAAW,CACtBC,WACiC,UAA/B,EAAKjB,MAAMC,WAAWiB,OACrBC,IAAQ,EAAKnB,MAAMC,WAAWC,U,EAGnCmB,mBAAqB,WAAO,IAClBC,EAASlB,UAATkB,KACFC,EAAuBD,EAAKE,cAAcC,QAAO,SAACC,GACtD,OAAOA,EAAIpB,MAAQF,UAAQC,OAAOC,OAEpCgB,EAAKE,cAAgBD,EACrBnB,UAAQkB,KAAOA,G,EAGjBK,a,uCAAe,WAAOC,GAAP,iBAAAC,EAAA,6DACbD,EAAEE,iBADW,SAUUC,aAAaC,SAAS,EAAKhC,OAAOiC,OAAM,SAACC,GAC9D,GAAIA,EAOF,OANAC,QAAQC,IAAI,QAASF,GACrB,EAAKG,SAAS,CACZpC,WAAY,CACVC,OAAQgC,KAGLA,KAlBE,UAUPI,EAVO,QAqBTnB,IAAQmB,EAASpC,QArBR,wBAsBX,EAAKmC,SAAS,CACZ3B,SAAS,IAvBA,SAyBiB,EAAK6B,MAAMC,OAAOC,OAAO,CACnDC,SAAUC,IACVC,UAAW,CACTtC,IAAK,EAAKN,MAAMG,SAChBW,MAAO,EAAKd,MAAMc,MAClBP,kBAAmB,EAAKP,MAAMO,mBAEhCsC,eAAgB,CACd,CACEC,MAAOC,IACPH,UAAW,CAAEI,UAAW,GAAIC,aAAc,QAnCrC,QAyBLC,EAzBK,UAwCT9C,UAAQC,OAAS6C,EAAcC,KAAKC,aAEpCC,QAAMC,QAAQ,2BAA4B,CACxCC,UAAW,SACXC,cAAe,cACfC,iBAAiB,KAIrB,EAAKpB,SAAS,CACZpC,WAAY,CACVC,OAAQ,CAAC,OAEXQ,SAAS,IArDA,4C,wDA0DfgD,iBAAmB,WAAO,IAChBrD,EAAiBD,UAAjBC,OACFsD,EADmBvD,UAATkB,KAEhBqC,EAASnC,cAAcoC,KAAK,CAAEtD,IAAKD,EAAOC,IAAKQ,MAAOT,EAAOS,QAC7DV,UAAQkB,KAAOqC,G,EAGjBE,kBAAoB,WAAO,IACjB1D,GAAa,EAAKoC,MAAMuB,SAAS9D,OAAS,IAA1CG,SACI,IAAI4D,SAAQ,SAACC,GACvB,GAAI5D,UAAQkB,KAAKE,cACf,IAAIyC,EAAS7D,UAAQkB,KAAKE,cAAc0C,MAAK,SAACC,GAC5C,OAAOA,EAAE7D,MAAQH,KAGrB6D,EAAQC,MAGJG,MAAK,SAACC,GACV,IAAIC,GAAO,EACPD,IAAKC,GAAO,GAChB,EAAKjC,SAAS,CACZ1B,WAAY2D,Q,uDAKR,IAAD,SACqBC,KAAKhC,MAAzBiC,EADD,EACCA,QAAShC,EADV,EACUA,OACTlB,EAAiBlB,UAAjBkB,KAAMjB,EAAWD,UAAXC,OACd,OACE,kBAAC,QAAD,CACEyC,MAAO2B,IACP7B,UAAW,CACTtC,IAAKD,EAAOC,OAGb,YAAyB,IAAtBI,EAAqB,EAArBA,QAASgE,EAAY,EAAZA,MACX,OAAIhE,EAEA,kBAAC,IAAD,CACEiE,WAAS,EACTC,aAAa,SACbC,QAAQ,SACRC,MAAO,CAAEC,OAAQ,UAEjB,kBAAC,IAAD,CAAkBD,MAAO,CAAEE,MAAO,WAGpCN,GACFvC,QAAQC,IAAI,QAASsC,GAEnB,kBAAC,IAAD,KACE,2BACGA,EAAMO,cAAcC,KAAI,WAAcC,GAAd,IAAGC,EAAH,EAAGA,QAAH,OACvB,uBACEN,MAAO,CACLO,SAAU,QACVL,MAAO,MACPM,OAAQ,OACRC,QAAS,OACTC,UAAW,UAEbC,IAAKN,GAEJC,SAQX,0BAAMM,SAAU,EAAK/D,cACnB,kBAAC,IAAD,KACE,0BAAMgE,QAAQ,UACd,0BACEnF,KAAK,WACLoF,QAAQ,0DAEV,0BACEpF,KAAK,cACLoF,QAAQ,iCAEV,0BAAMpF,KAAK,SAASoF,QAAQ,cAC5B,kEACA,0BACEC,IAAI,YACJC,KAAK,mDAGT,kBAAC,IAAD,CACEvC,UAAWiB,EAAQuB,KACnBpB,WAAS,EACTE,QAAQ,SACRmB,UAAU,UAEV,kBAAC,IAAD,CAAOzC,UAAWiB,EAAQyB,OAAQC,UAAW,GAC3C,kBAAC,IAAD,CACE3C,UAAWiB,EAAQ2B,WACnBC,QAAQ,KACRC,MAAM,SACNC,cAAY,GAJd,yBAUJ,0BAAM/C,UAAWiB,EAAQoB,SACvB,kBAAC,IAAD,CAAMjB,WAAS,EAAC4B,QAAS,IACvB,kBAAC,IAAD,CACEC,MAAI,EACJC,GAAI,GACJ3B,MAAO,CACL4B,QAAS,OACTC,cAAe,SACfC,WAAY,WAwBd,yBAAK9B,MAAO,CAAE4B,QAAS,OAAQG,eAAgB,WAC7C,kBAAC,IAAD,CAAKvB,OAAO,OAAOwB,IAAKzG,EAAO0G,gBAGnC,kBAAC,IAAD,CAAMP,MAAI,EAACC,GAAI,GAAIJ,MAAM,UACvB,kBAAC,WAAD,CACE3D,SAAUsE,IACVC,YAAa,EAAKvD,mBAEjB,SAACsD,EAAD,GAAsC,IAAftG,EAAc,EAAdA,QACtB,OACE,kBAAC,IAAD,CACEA,QAASA,EACTwG,SAAUxG,EACVsE,OAC4B,IAA1B,EAAKhF,MAAMW,WACP,YACA,UAENyF,QAAQ,YACRe,QAAS,WACH,EAAKnH,MAAMW,aACb6B,EAAOC,OAAO,CACZC,SAAU0E,IACVxE,UAAW,CACTzC,SAAUE,EAAOC,IACjB+G,OAAQjH,UAAQkB,KAAKhB,OAGzB,EAAK+B,SAAS,CACZ1B,YAAY,IAEd,EAAKU,sBAEF,EAAKrB,MAAMW,aACdqG,EAAmB,CACjBpE,UAAW,CACTzC,SAAUE,EAAOC,IACjB+G,OAAQjH,UAAQkB,KAAKhB,OAGzB,EAAK+B,SAAS,CACZ1B,YAAY,MAIlB2G,KAAK,SAEL,kBAAC,IAAD,KACG,EAAKtH,MAAMW,WACR,cACA,kBAOhB,kBAAC,IAAD,CAAM6F,MAAI,EAACC,GAAI,IACb,kBAAC,IAAD,CAAYL,QAAQ,KAAKC,MAAM,OAAOC,cAAY,GAAlD,uBAGA,kBAAC,IAAD,CACE/C,UAAS,UAAKiB,EAAQ,EAAKpD,YAAlB,YACPoD,EAAQ+C,aAEVC,WAAS,EACTN,SAAU,EAAKlH,MAAMU,QACrB+G,MAAM,eACNnC,OAAO,SACP9E,KAAK,QACLkH,SAAU,SAAC9F,GAAD,OACR,EAAKS,SAAS,CACZvB,MAAOc,EAAE+F,OAAOC,SAGpBC,YAAY,uBACZC,KAAK,OACL1B,QAAQ,WACRwB,MAAO,EAAK5H,MAAMc,QAEY,UAA/B,EAAKd,MAAMC,WAAWiB,MACrB,yBAAK4D,MAAO,CAAEE,MAAO,YAClB,EAAKhF,MAAMC,WAAWC,OAAO,IAIlC,kBAAC,IAAD,CACEqD,UAAS,UAAKiB,EAAQ,EAAKzD,wBAAlB,YACPyD,EAAQ+C,aAEVL,SAAU,EAAKlH,MAAMU,QACrB8G,WAAS,EACThH,KAAK,oBACLiH,MAAM,qBACNK,KAAK,OACLJ,SAAU,SAAC9F,GAAD,OACR,EAAKS,SAAS,CACZ9B,kBAAmBqB,EAAE+F,OAAOC,SAGhCtC,OAAO,SACPyC,WAAS,EACT3B,QAAQ,WACR4B,QAAQ,KACRJ,MAAO,EAAK5H,MAAMO,oBAEY,sBAA/B,EAAKP,MAAMC,WAAWiB,MACrB,yBAAK4D,MAAO,CAAEE,MAAO,YAClB,EAAKhF,MAAMC,WAAWC,OAAO,KAIpC,kBAAC,IAAD,CAAMsG,MAAI,EAACC,GAAI,IACb,kBAAC,IAAD,CAAYL,QAAQ,KAAKC,MAAM,OAAOC,cAAY,GAAlD,kBAGA,kBAAC,IAAD,CAAYF,QAAQ,QAAQC,MAAM,OAAOC,cAAY,GAArD,iBACiB,IACf,0BAAMxB,MAAO,CAAEmD,WAAY,MACxB5H,EAAO6H,MAAMC,WAGlB,kBAAC,IAAD,CAAY/B,QAAQ,QAAQC,MAAM,OAAOC,cAAY,GAArD,YACY,IACV,0BAAMxB,MAAO,CAAEmD,WAAY,MACxB5H,EAAO+H,UAAY,SAGxB,kBAAC,IAAD,CAAYhC,QAAQ,QAAQC,MAAM,OAAOC,cAAY,GAArD,kBACkB,IAChB,0BAAMxB,MAAO,CAAEmD,WAAY,MACxB5H,EAAO2C,YAGZ,kBAAC,IAAD,CAAYoD,QAAQ,QAAQC,MAAM,OAAOC,cAAY,GAArD,qBACqB,IACnB,0BAAMxB,MAAO,CAAEmD,WAAY,MACxB5H,EAAO4C,gBAId,kBAAC,IAAD,CAAM0B,WAAS,EAACG,MAAO,CAAEQ,OAAQ,cAC/B,kBAAC,IAAD,CACE+C,MAAO/G,GAAQA,EAAK+G,MACpBC,QAAQ,6BACRC,GAAIjH,GAAQA,EAAK6G,SACjBK,WAAYnI,EAAO6H,MAAMC,SACzBM,IAAK,kBACH,kBAAC,IAAD,CAAMjC,MAAI,EAACC,GAAI,GAAIJ,MAAM,UACvB,kBAAC,IAAD,CACED,QAAQ,YACR1F,QAAS,EAAKV,MAAMU,QACpBwG,SAAU,EAAKlH,MAAMU,QACrBoH,KAAK,SACL9C,MAAM,aALR,kBAWJ0D,GAAI,kBAAM,mB,GA5YCC,iBAyZlBC,4BAAQC,aAAYC,qBAAWC,KAA/BH,CAAwC7I,I,+ECnb1CgJ,EAAS,SAAAC,GAAK,MAAK,CAC9BC,KAAM,CACJC,UAAW,QACXxC,QAAS,OACTC,cAAe,UAEjBwC,SAAU,CACR5D,QAAQ,GAAD,OAA0B,EAArByD,EAAMzC,QAAQ6C,KAAnB,SAETC,UAAW,CACTC,WAAY,SACZ,UAAW,CACTC,OAAQ,YAGZC,aAAc,CACZC,WAAY,SACZC,MAAO,QACPC,SAAU,SACVC,aAAc,YAEhBhE,QAAS,CACPiE,SAAU,EACVtE,QAA8B,EAArByD,EAAMzC,QAAQ6C,KACvBM,MAAO,QAETI,OAAQ,CACNJ,MA7BgB,IA8BhBK,WAAY,GAEdC,YAAa,CACXN,MAjCgB,KAmClBO,WAAY,CACVjF,MAAO,QACPkF,gBAAiB,UACjB,UAAW,CACTA,gBAAiB,YAGrBjJ,WAAY,CACVkJ,UAAU,mBAAD,OAAqBnB,EAAMoB,QAAQ1F,MAAM2F,MAClDH,gBAAiB,SAEnBhK,OAAQ,CACN8E,MAAOgE,EAAMoB,QAAQ1F,MAAM2F,MAE7BC,YAAa,CACXhF,OAAQ0D,EAAMzC,QAAQ6C,KACtBmB,SAAU,KAEZC,YAAa,CACX9D,QAAS,OACTG,eAAgB,iBAElB4D,UAAW,CACT1F,OAAQ,OACR2F,WAAY,MACZf,SAAU,SACVC,aAAc,WACde,UAAW,cAEb1E,OAAQ,CACNZ,SAA+B,EAArB2D,EAAMzC,QAAQ6C,KACxBnB,WAAY,IACZlD,OAAQ,OACRmE,UAAW,OACXQ,MAAO,QAETvD,WAAY,CACVZ,QAAS,QAEXQ,KAAM,CACJR,QAAS,WAEXqF,SAAU,GAGVC,YAAa,CACXvF,OAAQ,SACRC,QAAQ,GAAD,OAA0B,GAArByD,EAAMzC,QAAQ6C,KAAnB,aAET0B,YAAa,CACXC,UAAgC,EAArB/B,EAAMzC,QAAQ6C,MAE3B4B,KAAM,CACJC,YAAkC,EAArBjC,EAAMzC,QAAQ6C,MAE7B7B,YAAa,CACX2D,WAAY,QACZhC,UAAW,QAEbiC,OAAO,aACLzB,MAAO,OACP0B,WAAiC,EAArBpC,EAAMzC,QAAQ6C,KAC1B6B,YAAkC,EAArBjC,EAAMzC,QAAQ6C,MAC1BJ,EAAMqC,YAAYC,GAAG,KAA4B,EAArBtC,EAAMzC,QAAQ6C,KAAW,GAAK,CACzDM,MAAO,KACP0B,WAAY,OACZH,YAAa,SAGjBM,KAAM,CACJ3E,WAAY,aACZD,cAAe,MACfD,QAAS,OACTmD,SAAU,EACVH,MAAO,QAET8B,YAAa,CACXT,UAAgC,EAArB/B,EAAMzC,QAAQ6C,MAE3BqC,YAAa,CACXV,UAAW,OAEbW,SAAU,CACRC,SAAU,WACVC,QAAS,GACTC,KAAM,MACNC,gBAAiB,mBACjBC,UAAW","file":"static/js/course-introduction.6a775556.chunk.js","sourcesContent":["import {\n  COURSE_UPDATE,\n  SUBSCRIBE_MUTATION,\n  UNSUBSCRIBE_MUTATION,\n} from \"../../../graphql/mutations/course-mutations.js\"\nimport { Can, Img, LoadingButton } from \"../../../components\"\nimport {\n  GET_COURSE,\n  GET_COURSES,\n} from \"../../../graphql/queries/course-queries.js\"\nimport { Mutation, Query, compose, withApollo } from \"react-apollo\"\nimport React, { PureComponent } from \"react\"\n\n/* /1* import Button from \"@material-ui/core/Button\" *1/ */\nimport CircularProgress from \"@material-ui/core/CircularProgress\"\nimport Grid from \"@material-ui/core/Grid\"\nimport { Helmet } from \"react-helmet-async\"\nimport Paper from \"@material-ui/core/Paper\"\nimport TextField from \"@material-ui/core/TextField\"\nimport Typography from \"@material-ui/core/Typography\"\nimport classNames from \"classnames\"\nimport isEmpty from \"lodash/isEmpty\"\nimport { session } from \"brownies\"\nimport { styles } from \"../styles.js\"\n// import {courseSchema} from \"@utterzone/common\"\nimport { toast } from \"react-toastify\"\nimport { withStyles } from \"@material-ui/core/styles\"\n\nclass CourseIntroduction extends PureComponent {\n  state = {\n    formErrors: {\n      errors: [],\n    },\n    courseId: session.course._id,\n    courseDescription: session.course.courseDescription,\n    name: \"\",\n    email: \"\",\n    loading: false,\n    subscribed: false,\n    submittedName: \"\",\n    submittedEmail: \"\",\n    title: session.course.title,\n  }\n\n  courseDescriptionError = classNames({\n    errorClass:\n      this.state.formErrors.path === \"courseDescription\" &&\n      !isEmpty(this.state.formErrors.errors),\n  })\n\n  titleError = classNames({\n    errorClass:\n      this.state.formErrors.path === \"title\" &&\n      !isEmpty(this.state.formErrors.errors),\n  })\n\n  sessionUnsubscribe = () => {\n    const { user } = session\n    const updatedSubscriptions = user.subscriptions.filter((obj) => {\n      return obj._id !== session.course._id\n    })\n    user.subscriptions = updatedSubscriptions\n    session.user = user\n  }\n\n  handleSubmit = async (e) => {\n    e.preventDefault()\n\n    // reset errors\n    /* const resetErrors = this.setState({ */\n    /*   formErrors: { */\n    /*     errors: [] */\n    /*   } */\n    /* }) */\n\n    const yupCheck = await courseSchema.validate(this.state).catch((err) => {\n      if (err) {\n        console.log(\"err: \", err)\n        this.setState({\n          formErrors: {\n            errors: err,\n          },\n        })\n        return err\n      }\n    })\n    if (isEmpty(yupCheck.errors)) {\n      this.setState({\n        loading: true,\n      })\n      const updatedCourse = await this.props.client.mutate({\n        mutation: COURSE_UPDATE,\n        variables: {\n          _id: this.state.courseId,\n          title: this.state.title,\n          courseDescription: this.state.courseDescription,\n        },\n        refetchQueries: [\n          {\n            query: GET_COURSES,\n            variables: { usingLang: \"\", teachingLang: \"\" },\n          },\n        ],\n      })\n      if (updatedCourse) {\n        session.course = updatedCourse.data.courseUpdate\n        // TODO:  toastify & make loading button work on save\n        toast.success(\"Your changes were saved.\", {\n          className: \"toasty\",\n          bodyClassName: \"toasty-body\",\n          hideProgressBar: true,\n        })\n      }\n\n      this.setState({\n        formErrors: {\n          errors: [\"hi\"],\n        },\n        loading: false,\n      })\n    }\n  }\n\n  sessionSubscribe = () => {\n    const { course, user } = session\n    const tempUser = user\n    tempUser.subscriptions.push({ _id: course._id, title: course.title })\n    session.user = tempUser\n  }\n\n  componentDidMount = () => {\n    const { courseId } = this.props.location.state || \"\"\n    var found = new Promise((resolve) => {\n      if (session.user.subscriptions) {\n        var result = session.user.subscriptions.find((o) => {\n          return o._id === courseId\n        })\n      }\n      resolve(result)\n    })\n\n    found.then((res) => {\n      let bool = false\n      if (res) bool = true\n      this.setState({\n        subscribed: bool,\n      })\n    })\n  }\n\n  render() {\n    const { classes, client } = this.props\n    const { user, course } = session\n    return (\n      <Query\n        query={GET_COURSE}\n        variables={{\n          _id: course._id,\n        }}\n      >\n        {({ loading, error }) => {\n          if (loading)\n            return (\n              <Grid\n                container\n                alignContent=\"center\"\n                justify=\"center\"\n                style={{ height: \"300px\" }}\n              >\n                <CircularProgress style={{ color: \"grey\" }} />\n              </Grid>\n            )\n          if (error) {\n            console.log(\"err: \", error)\n            return (\n              <Grid>\n                <p>\n                  {error.graphQLErrors.map(({ message }, i) => (\n                    <p\n                      style={{\n                        fontSize: \"1.3em\",\n                        color: \"red\",\n                        margin: \"30px\",\n                        padding: \"30px\",\n                        textAlign: \"center\",\n                      }}\n                      key={i}\n                    >\n                      {message}\n                    </p>\n                  ))}\n                </p>\n              </Grid>\n            )\n          }\n          return (\n            <form onSubmit={this.handleSubmit}>\n              <Helmet>\n                <meta charset=\"utf-8\" />\n                <meta\n                  name=\"viewport\"\n                  content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"\n                />\n                <meta\n                  name=\"description\"\n                  content=\"Affordable language learning\"\n                />\n                <meta name=\"author\" content=\"Isaac Pak\" />\n                <title>Utterzone | Course Introduction</title>\n                <link\n                  rel=\"canonical\"\n                  href=\"https://utter.zone/course/course-introduction\"\n                />\n              </Helmet>\n              <Grid\n                className={classes.hero}\n                container\n                justify=\"center\"\n                direction=\"column\"\n              >\n                <Paper className={classes.header} elevation={1}>\n                  <Typography\n                    className={classes.headerBody}\n                    variant=\"h4\"\n                    align=\"center\"\n                    gutterBottom\n                  >\n                    Course Introduction\n                  </Typography>\n                </Paper>\n              </Grid>\n              <main className={classes.content}>\n                <Grid container spacing={24}>\n                  <Grid\n                    item\n                    xs={12}\n                    style={{\n                      display: \"flex\",\n                      flexDirection: \"column\",\n                      alignItems: \"center\",\n                    }}\n                  >\n                    {/*  \n\t\t\t\t\t\t\t\t\tTODO: Change thumbnail feature\n\t\t\t\t\t\t\t\t\t<Can\n                    roles={user.roles}\n                    perform=\"course:update-introduction\"\n                    id={user.username}\n                    matchingID={course.owner.username}\n                    yes={() => (\n                      <LoadingButton\n                        style={{display: \"flex\", width: \"120px\"}}\n                        variant=\"contained\">\n                        <Typography>Change Thumbnail</Typography>\n                      </LoadingButton>\n                    )}\n                    no={() => (\n                      <Typography variant=\"h6\" align=\"center\" gutterBottom>\n                        Course Thumbnail\n                      </Typography>\n                    )}\n                  /> */}\n\n                    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                      <Img margin=\"40px\" src={course.courseImage} />\n                    </div>\n                  </Grid>\n                  <Grid item xs={12} align=\"center\">\n                    <Mutation\n                      mutation={SUBSCRIBE_MUTATION}\n                      onCompleted={this.sessionSubscribe}\n                    >\n                      {(SUBSCRIBE_MUTATION, { loading }) => {\n                        return (\n                          <LoadingButton\n                            loading={loading}\n                            disabled={loading}\n                            color={\n                              this.state.subscribed === true\n                                ? \"secondary\"\n                                : \"primary\"\n                            }\n                            variant=\"contained\"\n                            onClick={() => {\n                              if (this.state.subscribed) {\n                                client.mutate({\n                                  mutation: UNSUBSCRIBE_MUTATION,\n                                  variables: {\n                                    courseId: course._id,\n                                    userId: session.user._id,\n                                  },\n                                })\n                                this.setState({\n                                  subscribed: false,\n                                })\n                                this.sessionUnsubscribe()\n                              }\n                              if (!this.state.subscribed) {\n                                SUBSCRIBE_MUTATION({\n                                  variables: {\n                                    courseId: course._id,\n                                    userId: session.user._id,\n                                  },\n                                })\n                                this.setState({\n                                  subscribed: true,\n                                })\n                              }\n                            }}\n                            size=\"large\"\n                          >\n                            <Typography>\n                              {this.state.subscribed\n                                ? \"unsubscribe\"\n                                : \"subscribe\"}\n                            </Typography>\n                          </LoadingButton>\n                        )\n                      }}\n                    </Mutation>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Typography variant=\"h6\" align=\"left\" gutterBottom>\n                      General Information\n                    </Typography>\n                    <TextField\n                      className={`${classes[this.titleError]} ${\n                        classes.inputHeader\n                      }`}\n                      fullWidth\n                      disabled={this.state.loading}\n                      label=\"Course Title\"\n                      margin=\"normal\"\n                      name=\"title\"\n                      onChange={(e) =>\n                        this.setState({\n                          title: e.target.value,\n                        })\n                      }\n                      placeholder=\"And it's title here.\"\n                      type=\"text\"\n                      variant=\"outlined\"\n                      value={this.state.title}\n                    />\n                    {this.state.formErrors.path === \"title\" && (\n                      <div style={{ color: \"#f44336\" }}>\n                        {this.state.formErrors.errors[0]}\n                      </div>\n                    )}\n\n                    <TextField\n                      className={`${classes[this.courseDescriptionError]} ${\n                        classes.inputHeader\n                      }`}\n                      disabled={this.state.loading}\n                      fullWidth\n                      name=\"courseDescription\"\n                      label=\"Course Description\"\n                      type=\"text\"\n                      onChange={(e) =>\n                        this.setState({\n                          courseDescription: e.target.value,\n                        })\n                      }\n                      margin=\"normal\"\n                      multiline\n                      variant=\"outlined\"\n                      rowsMax=\"12\"\n                      value={this.state.courseDescription}\n                    />\n                    {this.state.formErrors.path === \"courseDescription\" && (\n                      <div style={{ color: \"#f44336\" }}>\n                        {this.state.formErrors.errors[0]}\n                      </div>\n                    )}\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Typography variant=\"h6\" align=\"left\" gutterBottom>\n                      Course Details\n                    </Typography>\n                    <Typography variant=\"body1\" align=\"left\" gutterBottom>\n                      Course Author:{\" \"}\n                      <span style={{ fontWeight: 900 }}>\n                        {course.owner.username}\n                      </span>\n                    </Typography>\n                    <Typography variant=\"body1\" align=\"left\" gutterBottom>\n                      Resource:{\" \"}\n                      <span style={{ fontWeight: 900 }}>\n                        {course.resource || \"none\"}\n                      </span>\n                    </Typography>\n                    <Typography variant=\"body1\" align=\"left\" gutterBottom>\n                      Using Language:{\" \"}\n                      <span style={{ fontWeight: 900 }}>\n                        {course.usingLang}\n                      </span>\n                    </Typography>\n                    <Typography variant=\"body1\" align=\"left\" gutterBottom>\n                      Teaching Language:{\" \"}\n                      <span style={{ fontWeight: 900 }}>\n                        {course.teachingLang}\n                      </span>\n                    </Typography>\n                  </Grid>\n                  <Grid container style={{ margin: \"50px auto\" }}>\n                    <Can\n                      roles={user && user.roles}\n                      perform=\"course:update-introduction\"\n                      id={user && user.username}\n                      matchingID={course.owner.username}\n                      yes={() => (\n                        <Grid item xs={12} align=\"center\">\n                          <LoadingButton\n                            variant=\"contained\"\n                            loading={this.state.loading}\n                            disabled={this.state.loading}\n                            type=\"submit\"\n                            color=\"secondary\"\n                          >\n                            Save Changes\n                          </LoadingButton>\n                        </Grid>\n                      )}\n                      no={() => null}\n                    />\n                  </Grid>\n                </Grid>\n              </main>\n            </form>\n          )\n        }}\n      </Query>\n    )\n  }\n}\n\nexport default compose(withApollo, withStyles(styles))(CourseIntroduction)\n","const drawerWidth = 240\n\nexport const styles = theme => ({\n  card: {\n    minHeight: \"240px\",\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  cardGrid: {\n    padding: `${theme.spacing.unit * 8}px 0`\n  },\n  cardMedia: {\n    paddingTop: \"56.25%\", // 16:9\n    \"&:hover\": {\n      cursor: \"pointer\"\n    }\n  },\n  cardUsername: {\n    whiteSpace: \"nowrap\",\n    width: \"200px\",\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\"\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n    width: \"100%\"\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  editButton: {\n    color: \"white\",\n    backgroundColor: \"#ff7f7e\",\n    \"&:hover\": {\n      backgroundColor: \"#c56564\"\n    }\n  },\n  errorClass: {\n    boxShadow: `0px 0px 2px 1px ${theme.palette.error.main}`,\n    backgroundColor: \"white\"\n  },\n  errors: {\n    color: theme.palette.error.main\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    minWidth: 120\n  },\n  gridActions: {\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  },\n  gridTitle: {\n    height: \"40px\",\n    lineHeight: \"1em\",\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    wordBreak: \"break-word\"\n  },\n  header: {\n    fontSize: theme.spacing.unit * 3,\n    fontWeight: 400,\n    height: \"100%\",\n    minHeight: \"40px\",\n    width: \"100%\"\n  },\n  headerBody: {\n    padding: \"40px\"\n  },\n  hero: {\n    padding: \"0 24px \"\n  },\n  heroUnit: {\n    /* backgroundColor: theme.palette.background.paper */\n  },\n  heroContent: {\n    margin: \"0 auto\",\n    padding: `${theme.spacing.unit * 16}px 0 0 0`\n  },\n  heroButtons: {\n    marginTop: theme.spacing.unit * 4\n  },\n  icon: {\n    marginRight: theme.spacing.unit * 2\n  },\n  inputHeader: {\n    background: \"white\",\n    minHeight: \"40px\"\n  },\n  layout: {\n    width: \"auto\",\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(1240 + theme.spacing.unit * 3 * 2)]: {\n      width: 1240,\n      marginLeft: \"auto\",\n      marginRight: \"auto\"\n    }\n  },\n  root: {\n    alignItems: \"flex-start\",\n    flexDirection: \"row\",\n    display: \"flex\",\n    flexGrow: 1,\n    width: \"100%\"\n  },\n  selectEmpty: {\n    marginTop: theme.spacing.unit * 2\n  },\n  searchField: {\n    marginTop: \"7px\"\n  },\n  showMore: {\n    position: \"absolute\",\n    bottom: -50,\n    left: \"50%\",\n    webkitTransform: \"translateX(-50%)\",\n    transform: \"translateX(-50%)\"\n  }\n})\n"],"sourceRoot":""}